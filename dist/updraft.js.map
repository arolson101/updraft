{"version":3,"sources":["webpack:///webpack/bootstrap 9f669498812a898f2895","webpack:///./index.ts","webpack:///./Column.ts","webpack:///../~/invariant/browser.js","webpack:///../~/process/browser.js","webpack:///./Mutate.ts","webpack:///../~/object-assign/index.js","webpack:///../~/deep-equal/index.js","webpack:///../~/deep-equal/lib/keys.js","webpack:///../~/deep-equal/lib/is_arguments.js","webpack:///./Query.ts","webpack:///./Store.ts","webpack:///./Table.ts","webpack:///../~/clone/clone.js","webpack:///../~/buffer/index.js","webpack:///../~/base64-js/lib/b64.js","webpack:///../~/ieee754/index.js","webpack:///../~/is-array/index.js","webpack:///./SQLiteWrapper.ts","webpack:///./WebsqlWrapper.ts"],"names":[],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC,oDAAoD;AACrD,+CAA8C,cAAc;AAC5D;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC,gDAAgD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8FAA6F,oCAAoC;AACjsCAAqC;AACrC;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,2CAA0C,yBAAyB,EAAE;AACrE;AACA;;AAEA,2BAA0B;AAC1B;AACA;AACA;;AAEA;;;;;;;;ACpDA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,4BAA2B;AAC3B;AACA;AACA;AACA,6BAA4B,UAAU;;;;;;;AC1FtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B;AAC3B,sBAAqB,4BAA4B;AACjD;AACA;AACA,iBAAgB,aAAa;AAC7B,uBAAsB,aAAa;AACnC,kBAAiB,cAAc;AAC/B,qBAAoB,iBAAiB;AACrC,oBAAmB,gBAAgB;AACnC,mBAAkB,eAAe;AACjC,iBAAgB,aAAa;AAC7B,qBAAoB,gBAAgB;AACpC;AACA;AACA,qFAAoF;AACpF;AACA,uFAAsF;AACtF;AACA;AACA;AACA,kFAAiF;AACjF;AACA,uFAAsF;AACtF;AACA;AACA;AACA;AACA,4CAA2C,QAAQ;AACnD;AACA;AACA;AACA,UAAS;AACT,gDAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2GAA0G;AAC1G,+GAA8G;AAC9G;AACA;AACA;AACA;AACA;AACA,iGAAgG;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA2E;AAC3E,gHAA+G;AAC/G;AACA;AACA,oGAAmG;AACnG;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACrJA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAgB,sBAAsB;AACtC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAkB,oBAAoB;AACtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,IAAG;AACH;;AAEA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,cAAc;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG,YAAY;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB,QAAQ;AACjC;AACA;AACA;AACA;AACA;AACA,0BAAyB,QAAQ;AACjC;AACA;AACA;AACA;AACA;;;;;;;AC7FA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACRA;AACA;AACA,EAAC;;AAED;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACnBA;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,2BAA2B,aAAa;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA,8CAA6C,uCAAuC;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B,2BAA2B,EAAE;AAC5D,sCAAqC,iCAAiC,EAAE;AACxE;AACA;AACA;AACA;AACA;AACA,0BAAyB,wBAAwB,2BAA2B;AAC5E;AACA;AACA;AACA;AACA,gCAA+B,mBAAmB;AAClD,iEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAuC,iBAAiB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA2D,iBAAiB,EAAE;AAC9E;AACA;AACA;AACA;AACA,gCAA+B,sBAAsB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAwC,oDAAoD,EAAE;AAC9F,cAAa;AACb;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAmC,eAAe;AAClD;AACA;AACA;AACA;AACA,gCAA+B,cAAc;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B,uBAAuB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,6CAA4C,4EAA4E,EAAE;AAC1H;AACA,cAAa;AACb;AACA;AACA,gCAA+B,uBAAuB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA4C,oCAAoC,EAAE;AAClF;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0FAAyF,yDAAyD,EAAE;AACpJ,+EAA8E,4DAA4D,EAAE;AAC5I;AACA;AACA;AACA,iGAAgG;AAChG;AACA;AACA;AACA;AACA;AACA,yFAAwF,2DAA2D,EAAE;AACrJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAgD,4BAA4B;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA4C,iCAAiC,EAAE;AAC/E;AACA,yCAAwC,mCAAmC,EAAE;AAC7E,yCAAwC,2CAA2C,EAAE;AACrF,yCAAwC,6BAA6B,EAAE;AACvE,yCAAwC,8CAA8C,EAAE;AACxF,yCAAwC,4CAA4C,EAAE;AACtF,yCAAwC,4BAA4B,EAAE;AACtE;AACA,wCAAuC;AACvC;AACA;AACA;AACA;AACA,6CAA4C,yFAAyF,EAAE;AACvI,kBAAiB;AACjB,yCAAwC,wBAAwB,EAAE;AAClE;AACA;AACA;AACA,yCAAwC,wBAAwB,EAAE;AAClE;AACA;AACA;AACA;AACA,qCAAoC,+BAA+B,EAAE;AACrE,qCAAoC,4BAA4B,EAAE;AAClE;AACA;AACA;AACA;AACA;AACA,yBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA,0DAAyD,YAAY,EAAE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA4E,gCAAgC,EAAE;AAC9G,4DAA2D,mBAAmB,EAAE;AAChF;AACA;AACA;AACA,+CAA8C,8DAA8D,EAAE;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA2D,qBAAqB,EAAE;AAClF,+CAA8C,0DAA0D,EAAE;AAC1G;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,2CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAuC,0BAA0B;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAsD;AACtD;AACA,6EAA4E,EAAE;AAC9E;AACA;AACA;AACA,uDAAsD;AACtD;AACA,6EAA4E,EAAE;AAC9E;AACA;AACA;AACA;AACA,wFAAuF,+DAA+D,EAAE;AACxJ,sEAAqE,sBAAsB,EAAE;AAC7F,uDAAsD,sDAAsD,EAAE;AAC9G;AACA;AACA,sBAAqB;AACrB,kBAAiB,EAAE,EAAE;AACrB,cAAa;AACb;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA0C,aAAa;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yFAAwF,YAAY,EAAE;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAmC,iBAAiB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;;;;;;;ACnmBA;AACA;AACA;AACA;AACA;AACA,EAAC,0CAA0C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AChCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAC;;AAED;AACA;AACA;;;;;;;;AC/JA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB,YAAY;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,YAAY;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB,YAAY;AAC7B;AACA;AACA;AACA;;AAEA,iBAAgB,oCAAoC;AACpD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,kBAAiB,YAAY;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,iBAAiB;AAChC;AACA;AACA;;AAEA;AACA;AACA,cAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iDAAgD,EAAE;AAClD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,6BAA6B;AAChD;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,UAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,sBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,sBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,sBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,oBAAmB,cAAc;AACjwDAAuD,OAAO;AAC9D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,wDAAuD,OAAO;AAC9D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,sBAAqB,QAAQ;AAC7B;AACA;AACA,IAAG;AACH;AACA,gBAAe,SAAS;AACxB;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,mBAAkB;AAClB;AACA;;AAEA;AACA;;AAEA;AACA;AACA,oBAAmB,SAAS;AAC5B;AACA;AACA,IAAG;AACH;AACA;AACA,oBAAmB,SAAS;AAC5B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,wCAAuC,SAAS;AAChD;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAiB,YAAY;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,kBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB,gBAAgB;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;;;;;;;;ACvgDA;;AAEA,EAAC;AACD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,qBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kDAAiD,YAAY;AAC7D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,EAAC,6BAAqD;;;;;;;AC3HtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SAAQ,WAAW;;AAEnB;AACA;AACA;AACA,SAAQ,WAAW;;AAEnB;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA,SAAQ,WAAW;;AAEnB;AACA;AACA,SAAQ,UAAU;;AAElB;AACA;;;;;;;;AClFA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,MAAM;AACjB,aAAY;AACZ;;AAEA;AACA;AACA;;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAgD,0BAA0B,EAAE;AAC5E;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,gCAA+B,uCAAuC,EAAE;AACxE;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,mCAAkC,qBAAqB,EAAE;AACzD,gCAA+B,wCAAwC,EAAE;AACzE,gCAA+B,eAAe,EAAE;AAChD;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;;;;;;;AChGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B,2BAA2B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,gCAA+B,2BAA2B;AAC1D;AACA;AACA;AACA,qDAAoD,0BAA0B,EAAE;AAChF,0BAAyB;AACzB;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA,EAAC;AACD;AACA;AACA;AACA","file":"updraft.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 9f669498812a898f2895\n **/","\"use strict\";\nvar Column_ = require(\"./Column\");\nvar Mutate_ = require(\"./Mutate\");\nvar Query_ = require(\"./Query\");\nvar Store_ = require(\"./Store\");\nvar Table_ = require(\"./Table\");\nvar SQLiteWrapper_ = require(\"./SQLiteWrapper\");\nvar WebsqlWrapper_ = require(\"./WebsqlWrapper\");\nvar Updraft;\n(function (Updraft) {\n    Updraft.Query = Query_;\n    Updraft.Mutate = Mutate_;\n    Updraft.ColumnType = Column_.ColumnType;\n    Updraft.Column = Column_.Column;\n    Updraft.OrderBy = Table_.OrderBy;\n    Updraft.Table = Table_.Table;\n    Updraft.Store = Store_.Store;\n    Updraft.createStore = Store_.createStore;\n    Updraft.mutate = Mutate_.mutate;\n    Updraft.wrapSql = SQLiteWrapper_.wrapSql;\n    Updraft.wrapWebSql = WebsqlWrapper_.wrapWebsql;\n})(Updraft = exports.Updraft || (exports.Updraft = {}));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Updraft;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./index.ts\n ** module id = 0\n ** module chunks = 0\n **/","\"use strict\";\nvar invariant = require(\"invariant\");\n(function (ColumnType) {\n    ColumnType[ColumnType[\"int\"] = 0] = \"int\";\n    ColumnType[ColumnType[\"real\"] = 1] = \"real\";\n    ColumnType[ColumnType[\"bool\"] = 2] = \"bool\";\n    ColumnType[ColumnType[\"text\"] = 3] = \"text\";\n    ColumnType[ColumnType[\"blob\"] = 4] = \"blob\";\n    // enum,\n    ColumnType[ColumnType[\"date\"] = 5] = \"date\";\n    ColumnType[ColumnType[\"datetime\"] = 6] = \"datetime\";\n    ColumnType[ColumnType[\"json\"] = 7] = \"json\";\n    ColumnType[ColumnType[\"ptr\"] = 8] = \"ptr\";\n    ColumnType[ColumnType[\"set\"] = 9] = \"set\";\n})(exports.ColumnType || (exports.ColumnType = {}));\nvar ColumnType = exports.ColumnType;\n/**\n * Column in db.  Use static methods to create columns.\n */\nvar Column = (function () {\n    //public enum: EnumClass | TypeScriptEnum;\n    function Column(type) {\n        this.type = type;\n        if (type == ColumnType.bool) {\n            this.defaultValue = 0;\n        }\n    }\n    /**\n        * Column is the primary key.  Only one column can have this set.\n        */\n    Column.prototype.Key = function () {\n        this.isKey = true;\n        return this;\n    };\n    /**\n        * Create an index for this column for faster queries.\n        */\n    Column.prototype.Index = function () {\n        this.isIndex = true;\n        return this;\n    };\n    /**\n        * Set a default value for the column\n        */\n    // TODO\n    Column.prototype.Default = function (value) {\n        if (this.type == ColumnType.bool) {\n            value = (value != false) ? 1 : 0;\n        }\n        this.defaultValue = value;\n        return this;\n    };\n    /** create a column with \"INTEGER\" affinity */\n    Column.Int = function () {\n        return new Column(ColumnType.int);\n    };\n    /** create a column with \"REAL\" affinity */\n    Column.Real = function () {\n        return new Column(ColumnType.real);\n    };\n    /** create a column with \"BOOL\" affinity */\n    Column.Bool = function () {\n        return new Column(ColumnType.bool);\n    };\n    /** create a column with \"TEXT\" affinity */\n    Column.Text = function () {\n        return new Column(ColumnType.text);\n    };\n    /** create a column with \"TEXT\" affinity */\n    Column.String = function () {\n        return new Column(ColumnType.text);\n    };\n    /** create a column with \"BLOB\" affinity */\n    Column.Blob = function () {\n        var c = new Column(ColumnType.blob);\n        return c;\n    };\n    // /** a javascript object with instance method \"toString\" and class method \"get\" (e.g. {@link https://github.com/adrai/enum}). */\n    // static Enum(enum_: EnumClass | TypeScriptEnum): Column {\n    //   let c = new Column(ColumnType.enum);\n    //   c.enum = enum_;\n    //   return c;\n    // }\n    /** a javascript Date objct, stored in db as seconds since Unix epoch (time_t) [note: precision is seconds] */\n    Column.Date = function () {\n        return new Column(ColumnType.date);\n    };\n    /** a javascript Date objct, stored in db as seconds since Unix epoch (time_t) [note: precision is seconds] */\n    Column.DateTime = function () {\n        return new Column(ColumnType.datetime);\n    };\n    /** object will be serialized & restored as JSON text */\n    Column.JSON = function () {\n        return new Column(ColumnType.json);\n    };\n    // /** points to an object in another table.  Its affinity will automatically be that table's key's affinity */\n    // static Ptr(ref: ClassTemplate<any>): Column {\n    //   let c = new Column(ColumnType.ptr);\n    //   c.ref = ref;\n    //   return c;\n    // }\n    // /** unordered collection */\n    // static Set(ref: ClassTemplate<any> /*| ColumnType*/): Column {\n    //   let c = new Column(ColumnType.set);\n    //   c.ref = ref;\n    //   return c;\n    // }\n    Column.sql = function (val) {\n        var stmt = \"\";\n        switch (val.type) {\n            case ColumnType.int:\n                stmt = \"INTEGER\";\n                break;\n            case ColumnType.bool:\n                stmt = \"BOOLEAN\";\n                break;\n            case ColumnType.real:\n                stmt = \"REAL\";\n                break;\n            case ColumnType.text:\n                stmt = \"TEXT\";\n                break;\n            case ColumnType.json:\n                stmt = \"CLOB\";\n                break;\n            // case ColumnType.enum:\n            // \tstmt = \"CHARACTER(20)\";\n            // \tbreak;\n            case ColumnType.blob:\n                stmt = \"BLOB\";\n                break;\n            case ColumnType.date:\n                stmt = \"DATE\";\n                break;\n            case ColumnType.datetime:\n                stmt = \"DATETIME\";\n                break;\n            default:\n                throw new Error(\"unsupported type\");\n        }\n        if (\"defaultValue\" in val) {\n            function escape(x) {\n                if (typeof x === \"number\") {\n                    return x;\n                }\n                else if (typeof x === \"string\") {\n                    return \"'\" + x.replace(/'/g, \"''\") + \"'\";\n                }\n                else {\n                    invariant(false, \"default value (%s) must be number or string\", x);\n                }\n            }\n            stmt += \" DEFAULT \" + escape(val.defaultValue);\n        }\n        return stmt;\n    };\n    Column.fromSql = function (text) {\n        var parts = text.split(\" \");\n        var col = null;\n        switch (parts[0]) {\n            case \"INTEGER\":\n                col = Column.Int();\n                break;\n            case \"BOOLEAN\":\n                col = Column.Bool();\n                break;\n            case \"REAL\":\n                col = Column.Real();\n                break;\n            case \"TEXT\":\n                col = Column.Text();\n                break;\n            case \"CLOB\":\n                col = Column.JSON();\n                break;\n            // case \"CHARACTER(20)\";\n            // \tcol = Column.Enum()\n            // \tbreak;\n            case \"DATE\":\n                col = Column.Date();\n                break;\n            case \"DATETIME\":\n                col = Column.DateTime();\n                break;\n            default:\n                throw new Error(\"unsupported type: \" + parts[0]);\n        }\n        var match = text.match(/DEFAULT\\s+'((?:[^']|'')*)'/i);\n        if (match) {\n            var val = match[1].replace(/''/g, \"'\");\n            col.Default(val);\n        }\n        else {\n            match = text.match(/DEFAULT\\s+(\\w+)/i);\n            if (match) {\n                var val = match[1];\n                var valnum = parseInt(val, 10);\n                if (val == valnum) {\n                    val = valnum;\n                }\n                col.Default(val);\n            }\n        }\n        return col;\n    };\n    Column.equal = function (a, b) {\n        if (a.type != b.type) {\n            return false;\n        }\n        if ((a.defaultValue || b.defaultValue) && (a.defaultValue != b.defaultValue)) {\n            return false;\n        }\n        if ((a.isKey || b.isKey) && (a.isKey != b.isKey)) {\n            return false;\n        }\n        return true;\n    };\n    return Column;\n})();\nexports.Column = Column;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./Column.ts\n ** module id = 1\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule invariant\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        'Invariant Violation: ' +\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/invariant/browser.js\n ** module id = 2\n ** module chunks = 0\n **/","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/process/browser.js\n ** module id = 3\n ** module chunks = 0\n **/","// written to React\"s immutability helpers spec\n// see https://facebook.github.io/react/docs/update.html\n///<reference path=\"../typings/tsd.d.ts\"/>\n\"use strict\";\nvar assign = require(\"object-assign\");\nvar invariant = require(\"invariant\");\nvar equal = require(\"deep-equal\");\nfunction shallowCopy(x) {\n    if (Array.isArray(x)) {\n        return x.concat();\n    }\n    else if (x instanceof Set) {\n        return new Set(x);\n    }\n    else if (x && typeof x === \"object\") {\n        return assign(new x.constructor(), x);\n    }\n    else {\n        return x;\n    }\n}\nexports.hasOwnProperty = {}.hasOwnProperty;\nfunction keyOf(obj) { return Object.keys(obj)[0]; }\nexports.keyOf = keyOf;\nvar command = {\n    set: keyOf({ $set: null }),\n    increment: keyOf({ $inc: null }),\n    push: keyOf({ $push: null }),\n    unshift: keyOf({ $unshift: null }),\n    splice: keyOf({ $splice: null }),\n    merge: keyOf({ $merge: null }),\n    add: keyOf({ $add: null }),\n    deleter: keyOf({ $delete: null }),\n};\nfunction invariantArrayCase(value, spec, c) {\n    invariant(Array.isArray(value), \"mutate(): expected target of %s to be an array; got %s.\", c, value);\n    var specValue = spec[c];\n    invariant(Array.isArray(specValue), \"mutate(): expected spec of %s to be an array; got %s. \" +\n        \"Did you forget to wrap your parameter in an array?\", c, specValue);\n}\nfunction invariantSetCase(value, spec, c) {\n    invariant(value instanceof Set, \"mutate(): expected target of %s to be a set; got %s.\", c, value);\n    var specValue = spec[c];\n    invariant(Array.isArray(specValue), \"mutate(): expected spec of %s to be an array; got %s. \" +\n        \"Did you forget to wrap your parameter in an array?\", c, specValue);\n}\nfunction mutate(value, spec) {\n    invariant(typeof spec === \"object\", \"mutate(): You provided a key path to mutate() that did not contain one \" +\n        \"of %s. Did you forget to include {%s: ...}?\", Object.keys(command).join(\", \"), command.set);\n    // invariant(\n    // \tObject.keys(spec).reduce( function(previousValue: boolean, currentValue: string): boolean {\n    // \t\treturn previousValue && (keyOf(spec[currentValue]) in command);\n    // \t}, true),\n    // \t\"mutate(): argument has an unknown key; supported keys are (%s).  mutator: %s\",\n    // \tObject.keys(command).join(\", \"),\n    // \tspec\n    // );\n    if (exports.hasOwnProperty.call(spec, command.set)) {\n        invariant(Object.keys(spec).length === 1, \"Cannot have more than one key in an object with %s\", command.set);\n        return equal(value, spec[command.set]) ? value : spec[command.set];\n    }\n    if (exports.hasOwnProperty.call(spec, command.increment)) {\n        invariant(typeof (value) === \"number\" && typeof (spec[command.increment]) === \"number\", \"Source (%s) and argument (%s) to %s must be numbers\", value, spec[command.increment], command.increment);\n        return value + spec[command.increment];\n    }\n    var nextValue = shallowCopy(value);\n    var changed = false;\n    if (exports.hasOwnProperty.call(spec, command.merge)) {\n        var mergeObj = spec[command.merge];\n        invariant(mergeObj && typeof mergeObj === \"object\", \"mutate(): %s expects a spec of type 'object'; got %s\", command.merge, mergeObj);\n        invariant(nextValue && typeof nextValue === \"object\", \"mutate(): %s expects a target of type 'object'; got %s\", command.merge, nextValue);\n        assign(nextValue, spec[command.merge]);\n        return equal(value, nextValue) ? value : nextValue;\n    }\n    if (exports.hasOwnProperty.call(spec, command.deleter) && (typeof value === \"object\") && !(value instanceof Set)) {\n        var key = spec[command.merge];\n        invariant(key && typeof key === \"string\", \"mutate(): %s expects a spec of type 'string'; got %s\", command.deleter, key);\n        if (key in nextValue) {\n            delete nextValue[key];\n            return nextValue;\n        }\n        else {\n            return value;\n        }\n    }\n    if (exports.hasOwnProperty.call(spec, command.push)) {\n        invariantArrayCase(value, spec, command.push);\n        spec[command.push].forEach(function (item) {\n            nextValue.push(item);\n        });\n        return equal(value, nextValue) ? value : nextValue;\n    }\n    if (exports.hasOwnProperty.call(spec, command.unshift)) {\n        invariantArrayCase(value, spec, command.unshift);\n        if (spec[command.unshift].length) {\n            nextValue.unshift.apply(nextValue, spec[command.unshift]);\n            return nextValue;\n        }\n        else {\n            return value;\n        }\n    }\n    if (exports.hasOwnProperty.call(spec, command.splice)) {\n        invariant(Array.isArray(value), \"Expected %s target to be an array; got %s\", command.splice, value);\n        invariant(Array.isArray(spec[command.splice]), \"mutate(): expected spec of %s to be an array of arrays; got %s. \" +\n            \"Did you forget to wrap your parameters in an array?\", command.splice, spec[command.splice]);\n        spec[command.splice].forEach(function (args) {\n            invariant(Array.isArray(args), \"mutate(): expected spec of %s to be an array of arrays; got %s. \" +\n                \"Did you forget to wrap your parameters in an array?\", command.splice, spec[command.splice]);\n            nextValue.splice.apply(nextValue, args);\n        });\n        return equal(value, nextValue) ? value : nextValue;\n    }\n    if (exports.hasOwnProperty.call(spec, command.add)) {\n        invariantSetCase(value, spec, command.add);\n        spec[command.add].forEach(function (item) {\n            if (!nextValue.has(item)) {\n                nextValue.add(item);\n                changed = true;\n            }\n        });\n        return changed ? nextValue : value;\n    }\n    if (exports.hasOwnProperty.call(spec, command.deleter) && (value instanceof Set)) {\n        invariantSetCase(value, spec, command.deleter);\n        spec[command.deleter].forEach(function (item) {\n            if (nextValue.delete(item)) {\n                changed = true;\n            }\n        });\n        return changed ? nextValue : value;\n    }\n    for (var k in spec) {\n        if (!(command.hasOwnProperty(k) && command[k])) {\n            var oldValue = value[k];\n            var newValue = mutate(oldValue, spec[k]);\n            if (oldValue !== newValue) {\n                nextValue[k] = newValue;\n                changed = true;\n            }\n        }\n    }\n    return changed ? nextValue : value;\n}\nexports.mutate = mutate;\nfunction isMutated(a, b) {\n    // TODO: this isn\"t right because mutate will always return a new object\n    return a !== b;\n}\nexports.isMutated = isMutated;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./Mutate.ts\n ** module id = 4\n ** module chunks = 0\n **/","/* eslint-disable no-unused-vars */\n'use strict';\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nmodule.exports = Object.assign || function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (Object.getOwnPropertySymbols) {\n\t\t\tsymbols = Object.getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/object-assign/index.js\n ** module id = 5\n ** module chunks = 0\n **/","var pSlice = Array.prototype.slice;\nvar objectKeys = require('./lib/keys.js');\nvar isArguments = require('./lib/is_arguments.js');\n\nvar deepEqual = module.exports = function (actual, expected, opts) {\n  if (!opts) opts = {};\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n\n  } else if (actual instanceof Date && expected instanceof Date) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {\n    return opts.strict ? actual === expected : actual == expected;\n\n  // 7.4. For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else {\n    return objEquiv(actual, expected, opts);\n  }\n}\n\nfunction isUndefinedOrNull(value) {\n  return value === null || value === undefined;\n}\n\nfunction isBuffer (x) {\n  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;\n  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {\n    return false;\n  }\n  if (x.length > 0 && typeof x[0] !== 'number') return false;\n  return true;\n}\n\nfunction objEquiv(a, b, opts) {\n  var i, key;\n  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))\n    return false;\n  // an identical 'prototype' property.\n  if (a.prototype !== b.prototype) return false;\n  //~~~I've managed to break Object.keys through screwy arguments passing.\n  //   Converting to array solves the problem.\n  if (isArguments(a)) {\n    if (!isArguments(b)) {\n      return false;\n    }\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return deepEqual(a, b, opts);\n  }\n  if (isBuffer(a)) {\n    if (!isBuffer(b)) {\n      return false;\n    }\n    if (a.length !== b.length) return false;\n    for (i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) return false;\n    }\n    return true;\n  }\n  try {\n    var ka = objectKeys(a),\n        kb = objectKeys(b);\n  } catch (e) {//happens when one is a string literal and the other isn't\n    return false;\n  }\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length != kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] != kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!deepEqual(a[key], b[key], opts)) return false;\n  }\n  return typeof a === typeof b;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/deep-equal/index.js\n ** module id = 6\n ** module chunks = 0\n **/","exports = module.exports = typeof Object.keys === 'function'\n  ? Object.keys : shim;\n\nexports.shim = shim;\nfunction shim (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/deep-equal/lib/keys.js\n ** module id = 7\n ** module chunks = 0\n **/","var supportsArgumentsClass = (function(){\n  return Object.prototype.toString.call(arguments)\n})() == '[object Arguments]';\n\nexports = module.exports = supportsArgumentsClass ? supported : unsupported;\n\nexports.supported = supported;\nfunction supported(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n};\n\nexports.unsupported = unsupported;\nfunction unsupported(object){\n  return object &&\n    typeof object == 'object' &&\n    typeof object.length == 'number' &&\n    Object.prototype.hasOwnProperty.call(object, 'callee') &&\n    !Object.prototype.propertyIsEnumerable.call(object, 'callee') ||\n    false;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/deep-equal/lib/is_arguments.js\n ** module id = 8\n ** module chunks = 0\n **/","\"use strict\";\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./Query.ts\n ** module id = 9\n ** module chunks = 0\n **/","\"use strict\";\nvar Mutate_1 = require(\"./Mutate\");\nvar Column_1 = require(\"./Column\");\nvar Table_1 = require(\"./Table\");\nvar invariant = require(\"invariant\");\nvar clone = require(\"clone\");\nfunction startsWith(str, val) {\n    return str.lastIndexOf(val, 0) === 0;\n}\nvar Schema = (function () {\n    function Schema() {\n    }\n    return Schema;\n})();\nexports.Schema = Schema;\nvar ROWID = \"rowid\";\nvar COUNT = \"COUNT(*)\";\nvar internal_prefix = \"updraft_\";\nvar internal_column_deleted = internal_prefix + \"deleted\";\nvar internal_column_time = internal_prefix + \"time\";\nvar internal_column_latest = internal_prefix + \"latest\";\nvar internal_column_composed = internal_prefix + \"composed\";\nvar internalColumn = {};\ninternalColumn[internal_column_deleted] = Column_1.Column.Bool();\ninternalColumn[internal_column_time] = Column_1.Column.DateTime().Key();\ninternalColumn[internal_column_latest] = Column_1.Column.Bool();\ninternalColumn[internal_column_composed] = Column_1.Column.Bool();\nvar deleteRow_action = { internal_column_deleted: { $set: true } };\nfunction getChangeTableName(name) {\n    return internal_prefix + \"changes_\" + name;\n}\nvar Store = (function () {\n    function Store(params) {\n        this.params = params;\n        this.tables = [];\n        this.db = null;\n        invariant(this.params.db, \"must pass a DbWrapper\");\n    }\n    Store.prototype.createTable = function (tableSpec) {\n        var _this = this;\n        function buildIndices(spec) {\n            spec.indices = spec.indices || [];\n            for (var col in spec.columns) {\n                if (spec.columns[col].isIndex) {\n                    spec.indices.push([col]);\n                }\n            }\n        }\n        function createInternalTableSpec(spec) {\n            var newSpec = clone(spec);\n            for (var col in internalColumn) {\n                invariant(!spec.columns[col], \"table %s cannot have reserved column name %s\", spec.name, col);\n                newSpec.columns[col] = internalColumn[col];\n            }\n            buildIndices(newSpec);\n            return newSpec;\n        }\n        function createChangeTableSpec(spec) {\n            var newSpec = {\n                name: getChangeTableName(spec.name),\n                columns: {\n                    key: Column_1.Column.Int().Key(),\n                    time: Column_1.Column.DateTime().Key(),\n                    change: Column_1.Column.JSON(),\n                }\n            };\n            buildIndices(newSpec);\n            return newSpec;\n        }\n        invariant(!this.db, \"createTable() can only be added before open()\");\n        invariant(!startsWith(tableSpec.name, internal_prefix), \"table name %s cannot begin with %s\", tableSpec.name, internal_prefix);\n        for (var col in tableSpec.columns) {\n            invariant(!startsWith(col, internal_prefix), \"table %s column %s cannot begin with %s\", tableSpec.name, col, internal_prefix);\n        }\n        var table = new Table_1.Table(tableSpec);\n        table.add = function () {\n            var changes = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                changes[_i - 0] = arguments[_i];\n            }\n            return _this.add.apply(_this, [table].concat(changes));\n        };\n        table.find = function (query, opts) { return _this.find(table, query, opts); };\n        this.tables.push(createInternalTableSpec(tableSpec));\n        this.tables.push(createChangeTableSpec(tableSpec));\n        return table;\n    };\n    Store.prototype.open = function () {\n        var _this = this;\n        invariant(!this.db, \"open() called more than once!\");\n        invariant(this.tables.length, \"open() called before any tables were added\");\n        this.db = this.params.db;\n        return Promise.resolve()\n            .then(function () { return _this.readSchema(); })\n            .then(function (schema) { return _this.syncTables(schema); });\n        //.then(() => this.loadKeyValues());\n    };\n    Store.prototype.readSchema = function () {\n        invariant(this.db, \"readSchema(): not opened\");\n        function tableFromSql(name, sql) {\n            var table = { name: name, columns: {}, indices: [], triggers: {} };\n            var matches = sql.match(/\\((.*)\\)/);\n            if (matches) {\n                var pksplit = matches[1].split(/PRIMARY KEY/i);\n                var fields = pksplit[0].split(\",\");\n                for (var i = 0; i < fields.length; i++) {\n                    var ignore = /^\\s*(primary|foreign)\\s+key/i; // ignore standalone \"PRIMARY KEY xxx\"\n                    if (fields[i].match(ignore)) {\n                        continue;\n                    }\n                    var quotedName = /\"(.+)\"\\s+(.*)/;\n                    var unquotedName = /(\\w+)\\s+(.*)/;\n                    var parts = fields[i].match(quotedName);\n                    if (!parts) {\n                        parts = fields[i].match(unquotedName);\n                    }\n                    if (parts) {\n                        table.columns[parts[1]] = Column_1.Column.fromSql(parts[2]);\n                    }\n                }\n                if (pksplit.length > 1) {\n                    var pk = pksplit[1].match(/\\((.*)\\)/);\n                    if (pk) {\n                        var keys = pk[1].split(\",\");\n                        for (var i = 0; i < keys.length; i++) {\n                            var key = keys[i].trim();\n                            table.columns[key].isKey = true;\n                        }\n                    }\n                }\n            }\n            return table;\n        }\n        function indexFromSql(sql) {\n            var regex = /\\((.*)\\)/;\n            var matches = regex.exec(sql);\n            invariant(matches, \"bad format on index- couldn't determine column names from sql: %s\", sql);\n            return matches[1].split(\",\").map(function (x) { return x.trim(); });\n        }\n        return this.db.readTransaction(function (transaction) {\n            return transaction.executeSql(\"SELECT name, tbl_name, type, sql FROM sqlite_master\", [], function (tx, resultSet) {\n                var schema = {};\n                for (var i = 0; i < resultSet.length; i++) {\n                    var row = resultSet[i];\n                    if (row.name[0] != \"_\" && !startsWith(row.name, \"sqlite\")) {\n                        switch (row.type) {\n                            case \"table\":\n                                schema[row.name] = tableFromSql(row.name, row.sql);\n                                break;\n                            case \"index\":\n                                var index = indexFromSql(row.sql);\n                                if (index.length == 1) {\n                                    var col = index[0];\n                                    invariant(row.tbl_name in schema, \"table %s used by index %s should have been returned first\", row.tbl_name, row.name);\n                                    invariant(col in schema[row.tbl_name].columns, \"table %s does not have column %s used by index %s\", row.tbl_name, col, row.name);\n                                    schema[row.tbl_name].columns[col].isIndex = true;\n                                }\n                                else {\n                                    schema[row.tbl_name].indices.push(index);\n                                }\n                                break;\n                            case \"trigger\":\n                                //schema[row.tbl_name].triggers[row.name] = row.sql;\n                                break;\n                        }\n                    }\n                }\n                return schema;\n            });\n        });\n    };\n    Store.prototype.syncTables = function (schema) {\n        var _this = this;\n        invariant(this.db, \"syncTables(): not opened\");\n        return this.db.transaction(function (transaction) {\n            var p = Promise.resolve();\n            _this.tables.forEach(function (table) {\n                p = p.then(function () { return _this.syncTable(transaction, schema, table); });\n            });\n            return p;\n        });\n    };\n    Store.prototype.syncTable = function (transaction, schema, spec) {\n        function createTable(name) {\n            var cols = [];\n            var pk = [];\n            for (var col in spec.columns) {\n                var attrs = spec.columns[col];\n                var decl = void 0;\n                switch (attrs.type) {\n                    // case ColumnType.ptr:\n                    //   console.assert(attrs.ref != null);\n                    //   console.assert(attrs.ref.columns != null);\n                    //   console.assert(attrs.ret.table.name != null);\n                    //   console.assert(attrs.ref.key != null);\n                    //   let foreignCol: Column = attrs.ref.columns[attrs.ref.key];\n                    //   decl = col + \" \" + Column.sql(foreignCol);\n                    //   cols.push(decl);\n                    //   break;\n                    // case ColumnType.set:\n                    // \tbreak;\n                    default:\n                        decl = col + \" \" + Column_1.Column.sql(attrs);\n                        cols.push(decl);\n                        if (attrs.isKey) {\n                            pk.push(col);\n                        }\n                        break;\n                }\n            }\n            invariant(pk.length, \"table %s has no keys\", name);\n            cols.push(\"PRIMARY KEY(\" + pk.join(\", \") + \")\");\n            return transaction.executeSql(\"CREATE \" + (spec.temp ? \"TEMP \" : \"\") + \"TABLE \" + name + \" (\" + cols.join(\", \") + \")\");\n        }\n        function dropTable(name) {\n            return transaction.executeSql(\"DROP TABLE \" + name);\n        }\n        function createIndices(force) {\n            if (force === void 0) { force = false; }\n            function indicesEqual(a, b) {\n                if (a.length != b.length) {\n                    return false;\n                }\n                for (var i = 0; i < a.length; i++) {\n                    if (a[i] != b[i]) {\n                        return false;\n                    }\n                }\n                return true;\n            }\n            var p = Promise.resolve();\n            var oldIndices = (spec.name in schema) ? schema[spec.name].indices : [];\n            var newIndices = spec.indices;\n            function getIndexName(indices) {\n                return \"index_\" + spec.name + \"__\" + indices.join(\"_\");\n            }\n            oldIndices.forEach(function (value, i) {\n                var drop = true;\n                for (var j = 0; j < newIndices.length; j++) {\n                    if (indicesEqual(oldIndices[i], newIndices[j])) {\n                        drop = false;\n                        break;\n                    }\n                }\n                if (drop) {\n                    p = p.then(function () { return transaction.executeSql(\"DROP INDEX \" + getIndexName(oldIndices[i])); });\n                }\n            });\n            newIndices.forEach(function (value, j) {\n                var create = true;\n                for (var i = 0; i < oldIndices.length; i++) {\n                    if (indicesEqual(oldIndices[i], newIndices[j])) {\n                        create = false;\n                        break;\n                    }\n                }\n                if (create || force) {\n                    var index = newIndices[j];\n                    var sql = \"CREATE INDEX \" + getIndexName(index) + \" ON \" + spec.name + \" (\" + index.join(\", \") + \")\";\n                    p = p.then(function () { return transaction.executeSql(sql); });\n                }\n            });\n            return p;\n        }\n        var p = Promise.resolve();\n        if (spec.name in schema) {\n            var oldColumns = schema[spec.name].columns;\n            var newColumns = spec.columns;\n            var recreateTable = false;\n            for (var colName in oldColumns) {\n                if (!(colName in newColumns)) {\n                    recreateTable = true;\n                    break;\n                }\n                var oldCol = oldColumns[colName];\n                var newCol = newColumns[colName];\n                if (!Column_1.Column.equal(oldCol, newCol)) {\n                    recreateTable = true;\n                    break;\n                }\n            }\n            var renamedColumns = spec.renamedColumns || {};\n            for (var colName in renamedColumns) {\n                if (colName in oldColumns) {\n                    recreateTable = true;\n                }\n            }\n            var addedColumns = {};\n            if (!recreateTable) {\n                for (var colName in newColumns) {\n                    if (!(colName in oldColumns)) {\n                        addedColumns[colName] = newColumns[colName];\n                    }\n                }\n            }\n            if (recreateTable) {\n                // recreate and migrate data\n                function copyData(oldName, newName) {\n                    var oldTableColumns = Object.keys(oldColumns).filter(function (col) { return (col in spec.columns) || (col in renamedColumns); });\n                    var newTableColumns = oldTableColumns.map(function (col) { return (col in renamedColumns) ? renamedColumns[col] : col; });\n                    var p2 = Promise.resolve();\n                    if (oldTableColumns.length && newTableColumns.length) {\n                        var stmt = \"INSERT INTO \" + newName + \" (\" + newTableColumns.join(\", \") + \") \";\n                        stmt += \"SELECT \" + oldTableColumns.join(\", \") + \" FROM \" + oldName + \";\";\n                        p2 = transaction.executeSql(stmt);\n                    }\n                    return p2;\n                }\n                function migrateChangeTable(changeTableName) {\n                    var deletedColumns = Object.keys(oldColumns).filter(function (col) { return !(col in spec.columns) && !(col in renamedColumns); });\n                    var p2 = Promise.resolve();\n                    if (spec.renamedColumns || deletedColumns) {\n                        p2 = p2.then(function () {\n                            return transaction.each(\"SELECT \" + ROWID + \", change\"\n                                + \" FROM \" + changeTableName, [], function (selectChangeTransaction, row) {\n                                var change = JSON.parse(row.change);\n                                var changed = false;\n                                for (var oldCol in spec.renamedColumns) {\n                                    var newCol = spec.renamedColumns[oldCol];\n                                    if (oldCol in change) {\n                                        change[newCol] = change[oldCol];\n                                        delete change[oldCol];\n                                        changed = true;\n                                    }\n                                }\n                                for (var _i = 0; _i < deletedColumns.length; _i++) {\n                                    var oldCol = deletedColumns[_i];\n                                    if (oldCol in change) {\n                                        delete change[oldCol];\n                                        changed = true;\n                                    }\n                                }\n                                if (changed) {\n                                    if (Object.keys(change).length) {\n                                        return selectChangeTransaction.executeSql(\"UPDATE \" + changeTableName\n                                            + \" SET change=?\"\n                                            + \" WHERE \" + ROWID + \"=?\", [JSON.stringify(change), row[ROWID]]);\n                                    }\n                                    else {\n                                        return selectChangeTransaction.executeSql(\"DELETE FROM \" + changeTableName\n                                            + \" WHERE \" + ROWID + \"=?\", [row[ROWID]]);\n                                    }\n                                }\n                            });\n                        });\n                    }\n                    return p2;\n                }\n                function renameTable(oldName, newName) {\n                    return transaction.executeSql(\"ALTER TABLE \" + oldName + \" RENAME TO \" + newName);\n                }\n                var tempTableName = \"temp_\" + spec.name;\n                var changeTableName = getChangeTableName(spec.name);\n                if (tempTableName in schema) {\n                    // yikes!  migration failed but transaction got committed?\n                    p = p.then(function () { return dropTable(tempTableName); });\n                }\n                p = p.then(function () { return createTable(tempTableName); });\n                p = p.then(function () { return copyData(spec.name, tempTableName); });\n                p = p.then(function () { return dropTable(spec.name); });\n                p = p.then(function () { return renameTable(tempTableName, spec.name); });\n                p = p.then(function () { return migrateChangeTable(changeTableName); });\n                p = p.then(function () { return createIndices(true); });\n            }\n            else if (addedColumns != {}) {\n                // alter table, add columns\n                Object.keys(addedColumns).forEach(function (colName) {\n                    var col = spec.columns[colName];\n                    var columnDecl = colName + \" \" + Column_1.Column.sql(col);\n                    p = p.then(function () { return transaction.executeSql(\"ALTER TABLE \" + spec.name + \" ADD COLUMN \" + columnDecl); });\n                });\n                p = p.then(function () { return createIndices(); });\n            }\n            else {\n                // no table modification is required\n                p = p.then(function () { return createIndices(); });\n            }\n        }\n        else {\n            // create new table\n            p = p.then(function () { return createTable(spec.name); });\n            p = p.then(function () { return createIndices(true); });\n        }\n        return p;\n    };\n    Store.prototype.add = function (table) {\n        var changes = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            changes[_i - 1] = arguments[_i];\n        }\n        function insert(transaction, tableName, columns, values) {\n            var questionMarks = values.map(function (v) { return \"?\"; });\n            return transaction.executeSql(\"INSERT OR REPLACE INTO \" + tableName + \" (\" + columns.join(\", \") + \") VALUES (\" + questionMarks.join(\", \") + \")\", values);\n        }\n        invariant(this.db, \"apply(): not opened\");\n        var changeTable = getChangeTableName(table.spec.name);\n        return this.db.transaction(function (transaction) {\n            var p1 = Promise.resolve();\n            var toResolve = new Set();\n            changes.forEach(function (change) {\n                var time = change.time || Date.now();\n                invariant((change.save ? 1 : 0) + (change.change ? 1 : 0) + (change.delete ? 1 : 0) === 1, \"change (%s) must specify exactly one action at a time\", JSON.stringify(change));\n                if (change.save) {\n                    var element = change.save;\n                    var keyValue = table.keyValue(element);\n                    var columns = Object.keys(element).filter(function (k) { return k in table.spec.columns; });\n                    var values = columns.map(function (k) { return element[k]; });\n                    // append internal column values\n                    columns = [internal_column_time].concat(columns);\n                    values = [time].concat(values);\n                    p1 = p1.then(function () { return insert(transaction, table.spec.name, columns, values); });\n                    toResolve.add(keyValue);\n                }\n                else if (change.change || change.delete) {\n                    // insert into change table\n                    var changeRow = {\n                        key: null,\n                        time: time,\n                        change: null\n                    };\n                    if (change.change) {\n                        // store changes\n                        var mutator = clone(change.change);\n                        changeRow.key = table.keyValue(mutator);\n                        delete mutator[table.key];\n                        changeRow.change = JSON.stringify(mutator);\n                    }\n                    else {\n                        // mark deleted\n                        changeRow.key = change.delete;\n                        changeRow.change = JSON.stringify(deleteRow_action);\n                    }\n                    var columns = Object.keys(changeRow);\n                    var values = columns.map(function (k) { return changeRow[k]; });\n                    p1 = p1.then(function () { return insert(transaction, changeTable, columns, values); });\n                    toResolve.add(changeRow.key);\n                }\n                else {\n                    throw new Error(\"no operation specified for change- should be one of save, change, or delete\");\n                }\n            });\n            // these could be done in parallel\n            toResolve.forEach(function (keyValue) {\n                var baselineCols = [ROWID, internal_column_time, internal_column_deleted].concat(Object.keys(table.spec.columns));\n                p1 = p1.then(function () { return transaction.executeSql(\"SELECT \" + baselineCols.join(\", \")\n                    + \" FROM \" + table.spec.name\n                    + \" WHERE \" + table.key + \"=?\" + \" AND \" + internal_column_composed + \"=0\"\n                    + \" ORDER BY \" + internal_column_time + \" DESC\"\n                    + \" LIMIT 1\", [keyValue], function (tx1, baselineResults) {\n                    var baseline = {};\n                    var baseTime = 0;\n                    var baseRowId = -1;\n                    if (baselineResults.length) {\n                        baseline = baselineResults[0];\n                        baseTime = baseline[internal_column_time];\n                        invariant(ROWID in baseline, \"object has no ROWID (%s) - it has [%s]\", ROWID, Object.keys(baseline).join(\", \"));\n                        baseRowId = baseline[ROWID];\n                    }\n                    else {\n                        baseline[table.key] = keyValue;\n                    }\n                    var mutation = baseline;\n                    var mutationTime = baseTime;\n                    return tx1.executeSql(\"SELECT key, time, change\"\n                        + \" FROM \" + changeTable\n                        + \" WHERE key=? AND time>=?\"\n                        + \" ORDER BY time ASC\", [keyValue, baseTime], function (tx2, changeResults) {\n                        var p2 = Promise.resolve();\n                        for (var i = 0; i < changeResults.length; i++) {\n                            var row = changeResults[i];\n                            var mutator = JSON.parse(row.change);\n                            mutation = Mutate_1.mutate(mutation, mutator);\n                            mutationTime = Math.max(mutationTime, row.time);\n                        }\n                        if (baseRowId != -1 && !Mutate_1.isMutated(mutation, baseline)) {\n                            // mark it as latest (and others as not)\n                            p2 = p2.then(function () { return tx2.executeSql(\"UPDATE \" + table.spec.name\n                                + \" SET \" + internal_column_latest + \"=(\" + ROWID + \"=\" + baseRowId + \")\"\n                                + \" WHERE \" + table.key + \"=?\", [keyValue]); });\n                        }\n                        else {\n                            // invalidate old latest rows\n                            p2 = p2.then(function () { return tx2.executeSql(\"UPDATE \" + table.spec.name\n                                + \" SET \" + internal_column_latest + \"=0\"\n                                + \" WHERE \" + table.key + \"=?\", [keyValue]); });\n                            // insert new latest row\n                            mutation[internal_column_latest] = true;\n                            mutation[internal_column_time] = mutationTime;\n                            mutation[internal_column_composed] = true;\n                            var columns = Object.keys(mutation).filter(function (key) { return (key in table.spec.columns) || (key in internalColumn); });\n                            var values = columns.map(function (col) { return mutation[col]; });\n                            p2 = p2.then(function () { return insert(tx2, table.spec.name, columns, values); });\n                        }\n                        return p2;\n                    });\n                }); });\n            });\n            return p1;\n        });\n    };\n    Store.prototype.find = function (table, query, opts) {\n        opts = opts || {};\n        var numericConditions = {\n            $gt: \">\",\n            $gte: \">=\",\n            $lt: \"<\",\n            $lte: \"<=\"\n        };\n        var inCondition = Mutate_1.keyOf({ $in: false });\n        var conditions = [];\n        var values = [];\n        conditions.push(\"NOT \" + internal_column_deleted);\n        conditions.push(internal_column_latest);\n        for (var col in query) {\n            var spec = query[col];\n            var found = false;\n            for (var condition in numericConditions) {\n                if (Mutate_1.hasOwnProperty.call(spec, condition)) {\n                    conditions.push(\"(\" + col + numericConditions[condition] + \"?)\");\n                    var value = spec[condition];\n                    invariant(parseInt(value, 10) == value, \"condition %s must have a numeric argument: %s\", condition, value);\n                    values.push(value);\n                    found = true;\n                    break;\n                }\n            }\n            if (!found) {\n                if (Mutate_1.hasOwnProperty.call(spec, inCondition)) {\n                    invariant(spec[inCondition] instanceof Array, \"must be an array: %s\", JSON.stringify(spec[inCondition]));\n                    conditions.push(col + \" IN (\" + spec[inCondition].map(function (x) { return \"?\"; }).join(\", \") + \")\");\n                    values.push.apply(values, spec[inCondition]);\n                    found = true;\n                }\n            }\n            if (!found) {\n                if (table.spec.columns[col].type == Column_1.ColumnType.bool) {\n                    conditions.push((spec ? \"\" : \"NOT \") + col);\n                    found = true;\n                }\n                else if (typeof spec === \"number\" || typeof spec === \"string\") {\n                    conditions.push(\"(\" + col + \"=?)\");\n                    values.push(spec);\n                    found = true;\n                }\n                else if (spec instanceof RegExp) {\n                    var rx = spec;\n                    var arg = rx.source.replace(/\\.\\*/g, \"%\").replace(/\\./g, \"_\");\n                    if (arg[0] == \"^\") {\n                        arg = arg.substring(1);\n                    }\n                    else {\n                        arg = \"%\" + arg;\n                    }\n                    if (arg[arg.length - 1] == \"$\") {\n                        arg = arg.substring(0, arg.length - 1);\n                    }\n                    else {\n                        arg = arg + \"%\";\n                    }\n                    invariant(!arg.match(/(\\$|\\^|\\*|\\.|\\(|\\)|\\[|\\]|\\?)/), \"RegExp search only supports simple wildcards (.* and .): %s\", arg);\n                    conditions.push(\"(\" + col + \" LIKE ?)\");\n                    values.push(arg);\n                    found = true;\n                }\n                invariant(found, \"unknown query condition for %s: %s\", col, JSON.stringify(spec));\n            }\n        }\n        var columns = Object.keys(opts.fields || table.spec.columns);\n        var stmt = \"SELECT \" + (opts.count ? COUNT : columns.join(\", \"));\n        stmt += \" FROM \" + table.spec.name;\n        stmt += \" WHERE \" + conditions.join(\" AND \");\n        if (opts.orderBy) {\n            var col = Mutate_1.keyOf(opts.orderBy);\n            var order = opts.orderBy[col];\n            stmt += \" ORDER BY \" + col + \" \" + (order == Table_1.OrderBy.ASC ? \"ASC\" : \"DESC\");\n        }\n        if (opts.limit) {\n            stmt += \" LIMIT \" + opts.limit;\n        }\n        if (opts.offset) {\n            stmt += \" OFFSET \" + opts.offset;\n        }\n        return this.db.readTransaction(function (tx1) {\n            return tx1.executeSql(stmt, values, function (tx2, rows) {\n                if (opts.count) {\n                    var count = parseInt(rows[0][COUNT], 10);\n                    return Promise.resolve(count);\n                }\n                else {\n                    var results = [];\n                    for (var i = 0; i < rows.length; i++) {\n                        var row = rows[i];\n                        for (var col in row) {\n                            if (table.spec.columns[col].type == Column_1.ColumnType.bool) {\n                                row[col] = (row[col] && row[col] != 'false') ? true : false;\n                            }\n                        }\n                        // TODO: add constructable objects\n                        results.push(row);\n                    }\n                    return Promise.resolve(results);\n                }\n            });\n        });\n    };\n    return Store;\n})();\nexports.Store = Store;\nfunction createStore(params) {\n    return new Store(params);\n}\nexports.createStore = createStore;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./Store.ts\n ** module id = 10\n ** module chunks = 0\n **/","///<reference path=\"./Store\"/>\nvar invariant = require(\"invariant\");\n(function (OrderBy) {\n    OrderBy[OrderBy[\"ASC\"] = 0] = \"ASC\";\n    OrderBy[OrderBy[\"DESC\"] = 1] = \"DESC\";\n})(exports.OrderBy || (exports.OrderBy = {}));\nvar OrderBy = exports.OrderBy;\nvar Table = (function () {\n    function Table(spec) {\n        this.spec = spec;\n        this.key = tableKey(spec);\n    }\n    Table.prototype.keyValue = function (element) {\n        invariant(this.key in element, \"object does not have key field '%s' set: %s\", this.key, element);\n        return element[this.key];\n    };\n    return Table;\n})();\nexports.Table = Table;\nfunction tableKey(spec) {\n    var key = null;\n    for (var name_1 in spec.columns) {\n        var column = spec.columns[name_1];\n        invariant(column, \"column '%s' is not in %s\", name_1, JSON.stringify(spec));\n        if (column.isKey) {\n            invariant(!key, \"Table %s has more than one key- %s and %s\", spec.name, key, name_1);\n            key = name_1;\n        }\n    }\n    invariant(key, \"Table %s does not have a key\", spec.name);\n    return key;\n}\nexports.tableKey = tableKey;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./Table.ts\n ** module id = 11\n ** module chunks = 0\n **/","var clone = (function() {\n'use strict';\n\n/**\n * Clones (copies) an Object using deep copying.\n *\n * This function supports circular references by default, but if you are certain\n * there are no circular references in your object, you can save some CPU time\n * by calling clone(obj, false).\n *\n * Caution: if `circular` is false and `parent` contains circular references,\n * your program may enter an infinite loop and crash.\n *\n * @param `parent` - the object to be cloned\n * @param `circular` - set to true if the object to be cloned may contain\n *    circular references. (optional - true by default)\n * @param `depth` - set to a number if the object is only to be cloned to\n *    a particular depth. (optional - defaults to Infinity)\n * @param `prototype` - sets the prototype to be used when cloning an object.\n *    (optional - defaults to parent prototype).\n*/\nfunction clone(parent, circular, depth, prototype) {\n  var filter;\n  if (typeof circular === 'object') {\n    depth = circular.depth;\n    prototype = circular.prototype;\n    filter = circular.filter;\n    circular = circular.circular\n  }\n  // maintain two arrays for circular references, where corresponding parents\n  // and children have the same index\n  var allParents = [];\n  var allChildren = [];\n\n  var useBuffer = typeof Buffer != 'undefined';\n\n  if (typeof circular == 'undefined')\n    circular = true;\n\n  if (typeof depth == 'undefined')\n    depth = Infinity;\n\n  // recurse this function so we don't reset allParents and allChildren\n  function _clone(parent, depth) {\n    // cloning null always returns null\n    if (parent === null)\n      return null;\n\n    if (depth == 0)\n      return parent;\n\n    var child;\n    var proto;\n    if (typeof parent != 'object') {\n      return parent;\n    }\n\n    if (clone.__isArray(parent)) {\n      child = [];\n    } else if (clone.__isRegExp(parent)) {\n      child = new RegExp(parent.source, __getRegExpFlags(parent));\n      if (parent.lastIndex) child.lastIndex = parent.lastIndex;\n    } else if (clone.__isDate(parent)) {\n      child = new Date(parent.getTime());\n    } else if (useBuffer && Buffer.isBuffer(parent)) {\n      child = new Buffer(parent.length);\n      parent.copy(child);\n      return child;\n    } else {\n      if (typeof prototype == 'undefined') {\n        proto = Object.getPrototypeOf(parent);\n        child = Object.create(proto);\n      }\n      else {\n        child = Object.create(prototype);\n        proto = prototype;\n      }\n    }\n\n    if (circular) {\n      var index = allParents.indexOf(parent);\n\n      if (index != -1) {\n        return allChildren[index];\n      }\n      allParents.push(parent);\n      allChildren.push(child);\n    }\n\n    for (var i in parent) {\n      var attrs;\n      if (proto) {\n        attrs = Object.getOwnPropertyDescriptor(proto, i);\n      }\n\n      if (attrs && attrs.set == null) {\n        continue;\n      }\n      child[i] = _clone(parent[i], depth - 1);\n    }\n\n    return child;\n  }\n\n  return _clone(parent, depth);\n}\n\n/**\n * Simple flat clone using prototype, accepts only objects, usefull for property\n * override on FLAT configuration object (no nested props).\n *\n * USE WITH CAUTION! This may not behave as you wish if you do not know how this\n * works.\n */\nclone.clonePrototype = function clonePrototype(parent) {\n  if (parent === null)\n    return null;\n\n  var c = function () {};\n  c.prototype = parent;\n  return new c();\n};\n\n// private utility functions\n\nfunction __objToStr(o) {\n  return Object.prototype.toString.call(o);\n};\nclone.__objToStr = __objToStr;\n\nfunction __isDate(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object Date]';\n};\nclone.__isDate = __isDate;\n\nfunction __isArray(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object Array]';\n};\nclone.__isArray = __isArray;\n\nfunction __isRegExp(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object RegExp]';\n};\nclone.__isRegExp = __isRegExp;\n\nfunction __getRegExpFlags(re) {\n  var flags = '';\n  if (re.global) flags += 'g';\n  if (re.ignoreCase) flags += 'i';\n  if (re.multiline) flags += 'm';\n  return flags;\n};\nclone.__getRegExpFlags = __getRegExpFlags;\n\nreturn clone;\n})();\n\nif (typeof module === 'object' && module.exports) {\n  module.exports = clone;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/clone/clone.js\n ** module id = 12\n ** module chunks = 0\n **/","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('is-array')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\nBuffer.poolSize = 8192 // not used by this implementation\n\nvar rootParent = {}\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Safari 5-7 lacks support for changing the `Object.prototype.constructor` property\n *     on objects.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\nfunction typedArraySupport () {\n  function Bar () {}\n  try {\n    var arr = new Uint8Array(1)\n    arr.foo = function () { return 42 }\n    arr.constructor = Bar\n    return arr.foo() === 42 && // typed array instances can be augmented\n        arr.constructor === Bar && // constructor can be set\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\n/**\n * Class: Buffer\n * =============\n *\n * The Buffer constructor returns instances of `Uint8Array` that are augmented\n * with function properties for all the node `Buffer` API functions. We use\n * `Uint8Array` so that square bracket notation works as expected -- it returns\n * a single octet.\n *\n * By augmenting the instances, we can avoid modifying the `Uint8Array`\n * prototype.\n */\nfunction Buffer (arg) {\n  if (!(this instanceof Buffer)) {\n    // Avoid going through an ArgumentsAdaptorTrampoline in the common case.\n    if (arguments.length > 1) return new Buffer(arg, arguments[1])\n    return new Buffer(arg)\n  }\n\n  this.length = 0\n  this.parent = undefined\n\n  // Common case.\n  if (typeof arg === 'number') {\n    return fromNumber(this, arg)\n  }\n\n  // Slightly less common case.\n  if (typeof arg === 'string') {\n    return fromString(this, arg, arguments.length > 1 ? arguments[1] : 'utf8')\n  }\n\n  // Unusual.\n  return fromObject(this, arg)\n}\n\nfunction fromNumber (that, length) {\n  that = allocate(that, length < 0 ? 0 : checked(length) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < length; i++) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') encoding = 'utf8'\n\n  // Assumption: byteLength() return value is always < kMaxLength.\n  var length = byteLength(string, encoding) | 0\n  that = allocate(that, length)\n\n  that.write(string, encoding)\n  return that\n}\n\nfunction fromObject (that, object) {\n  if (Buffer.isBuffer(object)) return fromBuffer(that, object)\n\n  if (isArray(object)) return fromArray(that, object)\n\n  if (object == null) {\n    throw new TypeError('must start with number, buffer, array or string')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined') {\n    if (object.buffer instanceof ArrayBuffer) {\n      return fromTypedArray(that, object)\n    }\n    if (object instanceof ArrayBuffer) {\n      return fromArrayBuffer(that, object)\n    }\n  }\n\n  if (object.length) return fromArrayLike(that, object)\n\n  return fromJsonObject(that, object)\n}\n\nfunction fromBuffer (that, buffer) {\n  var length = checked(buffer.length) | 0\n  that = allocate(that, length)\n  buffer.copy(that, 0, 0, length)\n  return that\n}\n\nfunction fromArray (that, array) {\n  var length = checked(array.length) | 0\n  that = allocate(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\n// Duplicate of fromArray() to keep fromArray() monomorphic.\nfunction fromTypedArray (that, array) {\n  var length = checked(array.length) | 0\n  that = allocate(that, length)\n  // Truncating the elements is probably not what people expect from typed\n  // arrays with BYTES_PER_ELEMENT > 1 but it's compatible with the behavior\n  // of the old Buffer constructor.\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array) {\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    array.byteLength\n    that = Buffer._augment(new Uint8Array(array))\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromTypedArray(that, new Uint8Array(array))\n  }\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = checked(array.length) | 0\n  that = allocate(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\n// Deserialize { type: 'Buffer', data: [1,2,3,...] } into a Buffer object.\n// Returns a zero-length buffer for inputs that don't conform to the spec.\nfunction fromJsonObject (that, object) {\n  var array\n  var length = 0\n\n  if (object.type === 'Buffer' && isArray(object.data)) {\n    array = object.data\n    length = checked(array.length) | 0\n  }\n  that = allocate(that, length)\n\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n}\n\nfunction allocate (that, length) {\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = Buffer._augment(new Uint8Array(length))\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that.length = length\n    that._isBuffer = true\n  }\n\n  var fromPool = length !== 0 && length <= Buffer.poolSize >>> 1\n  if (fromPool) that.parent = rootParent\n\n  return that\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (subject, encoding) {\n  if (!(this instanceof SlowBuffer)) return new SlowBuffer(subject, encoding)\n\n  var buf = new Buffer(subject, encoding)\n  delete buf.parent\n  return buf\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  var i = 0\n  var len = Math.min(x, y)\n  while (i < len) {\n    if (a[i] !== b[i]) break\n\n    ++i\n  }\n\n  if (i !== len) {\n    x = a[i]\n    y = b[i]\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'binary':\n    case 'base64':\n    case 'raw':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) throw new TypeError('list argument must be an Array of Buffers.')\n\n  if (list.length === 0) {\n    return new Buffer(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; i++) {\n      length += list[i].length\n    }\n  }\n\n  var buf = new Buffer(length)\n  var pos = 0\n  for (i = 0; i < list.length; i++) {\n    var item = list[i]\n    item.copy(buf, pos)\n    pos += item.length\n  }\n  return buf\n}\n\nfunction byteLength (string, encoding) {\n  if (typeof string !== 'string') string = '' + string\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'binary':\n      // Deprecated\n      case 'raw':\n      case 'raws':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\n// pre-set for values that may exist in the future\nBuffer.prototype.length = undefined\nBuffer.prototype.parent = undefined\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  start = start | 0\n  end = end === undefined || end === Infinity ? this.length : end | 0\n\n  if (!encoding) encoding = 'utf8'\n  if (start < 0) start = 0\n  if (end > this.length) end = this.length\n  if (end <= start) return ''\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'binary':\n        return binarySlice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return 0\n  return Buffer.compare(this, b)\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset) {\n  if (byteOffset > 0x7fffffff) byteOffset = 0x7fffffff\n  else if (byteOffset < -0x80000000) byteOffset = -0x80000000\n  byteOffset >>= 0\n\n  if (this.length === 0) return -1\n  if (byteOffset >= this.length) return -1\n\n  // Negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = Math.max(this.length + byteOffset, 0)\n\n  if (typeof val === 'string') {\n    if (val.length === 0) return -1 // special case: looking for empty string always fails\n    return String.prototype.indexOf.call(this, val, byteOffset)\n  }\n  if (Buffer.isBuffer(val)) {\n    return arrayIndexOf(this, val, byteOffset)\n  }\n  if (typeof val === 'number') {\n    if (Buffer.TYPED_ARRAY_SUPPORT && Uint8Array.prototype.indexOf === 'function') {\n      return Uint8Array.prototype.indexOf.call(this, val, byteOffset)\n    }\n    return arrayIndexOf(this, [ val ], byteOffset)\n  }\n\n  function arrayIndexOf (arr, val, byteOffset) {\n    var foundIndex = -1\n    for (var i = 0; byteOffset + i < arr.length; i++) {\n      if (arr[byteOffset + i] === val[foundIndex === -1 ? 0 : i - foundIndex]) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === val.length) return byteOffset + foundIndex\n      } else {\n        foundIndex = -1\n      }\n    }\n    return -1\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\n// `get` is deprecated\nBuffer.prototype.get = function get (offset) {\n  console.log('.get() is deprecated. Access using array indexes instead.')\n  return this.readUInt8(offset)\n}\n\n// `set` is deprecated\nBuffer.prototype.set = function set (v, offset) {\n  console.log('.set() is deprecated. Access using array indexes instead.')\n  return this.writeUInt8(v, offset)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new Error('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; i++) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) throw new Error('Invalid hex string')\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction binaryWrite (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    var swap = encoding\n    encoding = offset\n    offset = length | 0\n    length = swap\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'binary':\n        return binaryWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction binarySlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; i++) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = Buffer._augment(this.subarray(start, end))\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; i++) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  if (newBuf.length) newBuf.parent = this.parent || this\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('buffer must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('value is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; i++) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; i++) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = value < 0 ? 1 : 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = value < 0 ? 1 : 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (value > max || value < min) throw new RangeError('value is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('index out of range')\n  if (offset < 0) throw new RangeError('index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; i--) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; i++) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    target._set(this.subarray(start, start + len), targetStart)\n  }\n\n  return len\n}\n\n// fill(value, start=0, end=buffer.length)\nBuffer.prototype.fill = function fill (value, start, end) {\n  if (!value) value = 0\n  if (!start) start = 0\n  if (!end) end = this.length\n\n  if (end < start) throw new RangeError('end < start')\n\n  // Fill 0 bytes; we're done\n  if (end === start) return\n  if (this.length === 0) return\n\n  if (start < 0 || start >= this.length) throw new RangeError('start out of bounds')\n  if (end < 0 || end > this.length) throw new RangeError('end out of bounds')\n\n  var i\n  if (typeof value === 'number') {\n    for (i = start; i < end; i++) {\n      this[i] = value\n    }\n  } else {\n    var bytes = utf8ToBytes(value.toString())\n    var len = bytes.length\n    for (i = start; i < end; i++) {\n      this[i] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n/**\n * Creates a new `ArrayBuffer` with the *copied* memory of the buffer instance.\n * Added in Node 0.12. Only available in browsers that support ArrayBuffer.\n */\nBuffer.prototype.toArrayBuffer = function toArrayBuffer () {\n  if (typeof Uint8Array !== 'undefined') {\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n      return (new Buffer(this)).buffer\n    } else {\n      var buf = new Uint8Array(this.length)\n      for (var i = 0, len = buf.length; i < len; i += 1) {\n        buf[i] = this[i]\n      }\n      return buf.buffer\n    }\n  } else {\n    throw new TypeError('Buffer.toArrayBuffer not supported in this browser')\n  }\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar BP = Buffer.prototype\n\n/**\n * Augment a Uint8Array *instance* (not the Uint8Array class!) with Buffer methods\n */\nBuffer._augment = function _augment (arr) {\n  arr.constructor = Buffer\n  arr._isBuffer = true\n\n  // save reference to original Uint8Array set method before overwriting\n  arr._set = arr.set\n\n  // deprecated\n  arr.get = BP.get\n  arr.set = BP.set\n\n  arr.write = BP.write\n  arr.toString = BP.toString\n  arr.toLocaleString = BP.toString\n  arr.toJSON = BP.toJSON\n  arr.equals = BP.equals\n  arr.compare = BP.compare\n  arr.indexOf = BP.indexOf\n  arr.copy = BP.copy\n  arr.slice = BP.slice\n  arr.readUIntLE = BP.readUIntLE\n  arr.readUIntBE = BP.readUIntBE\n  arr.readUInt8 = BP.readUInt8\n  arr.readUInt16LE = BP.readUInt16LE\n  arr.readUInt16BE = BP.readUInt16BE\n  arr.readUInt32LE = BP.readUInt32LE\n  arr.readUInt32BE = BP.readUInt32BE\n  arr.readIntLE = BP.readIntLE\n  arr.readIntBE = BP.readIntBE\n  arr.readInt8 = BP.readInt8\n  arr.readInt16LE = BP.readInt16LE\n  arr.readInt16BE = BP.readInt16BE\n  arr.readInt32LE = BP.readInt32LE\n  arr.readInt32BE = BP.readInt32BE\n  arr.readFloatLE = BP.readFloatLE\n  arr.readFloatBE = BP.readFloatBE\n  arr.readDoubleLE = BP.readDoubleLE\n  arr.readDoubleBE = BP.readDoubleBE\n  arr.writeUInt8 = BP.writeUInt8\n  arr.writeUIntLE = BP.writeUIntLE\n  arr.writeUIntBE = BP.writeUIntBE\n  arr.writeUInt16LE = BP.writeUInt16LE\n  arr.writeUInt16BE = BP.writeUInt16BE\n  arr.writeUInt32LE = BP.writeUInt32LE\n  arr.writeUInt32BE = BP.writeUInt32BE\n  arr.writeIntLE = BP.writeIntLE\n  arr.writeIntBE = BP.writeIntBE\n  arr.writeInt8 = BP.writeInt8\n  arr.writeInt16LE = BP.writeInt16LE\n  arr.writeInt16BE = BP.writeInt16BE\n  arr.writeInt32LE = BP.writeInt32LE\n  arr.writeInt32BE = BP.writeInt32BE\n  arr.writeFloatLE = BP.writeFloatLE\n  arr.writeFloatBE = BP.writeFloatBE\n  arr.writeDoubleLE = BP.writeDoubleLE\n  arr.writeDoubleBE = BP.writeDoubleBE\n  arr.fill = BP.fill\n  arr.inspect = BP.inspect\n  arr.toArrayBuffer = BP.toArrayBuffer\n\n  return arr\n}\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; i++) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00 | 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; i++) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/buffer/index.js\n ** module id = 13\n ** module chunks = 0\n **/","var lookup = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n;(function (exports) {\n\t'use strict';\n\n  var Arr = (typeof Uint8Array !== 'undefined')\n    ? Uint8Array\n    : Array\n\n\tvar PLUS   = '+'.charCodeAt(0)\n\tvar SLASH  = '/'.charCodeAt(0)\n\tvar NUMBER = '0'.charCodeAt(0)\n\tvar LOWER  = 'a'.charCodeAt(0)\n\tvar UPPER  = 'A'.charCodeAt(0)\n\tvar PLUS_URL_SAFE = '-'.charCodeAt(0)\n\tvar SLASH_URL_SAFE = '_'.charCodeAt(0)\n\n\tfunction decode (elt) {\n\t\tvar code = elt.charCodeAt(0)\n\t\tif (code === PLUS ||\n\t\t    code === PLUS_URL_SAFE)\n\t\t\treturn 62 // '+'\n\t\tif (code === SLASH ||\n\t\t    code === SLASH_URL_SAFE)\n\t\t\treturn 63 // '/'\n\t\tif (code < NUMBER)\n\t\t\treturn -1 //no match\n\t\tif (code < NUMBER + 10)\n\t\t\treturn code - NUMBER + 26 + 26\n\t\tif (code < UPPER + 26)\n\t\t\treturn code - UPPER\n\t\tif (code < LOWER + 26)\n\t\t\treturn code - LOWER + 26\n\t}\n\n\tfunction b64ToByteArray (b64) {\n\t\tvar i, j, l, tmp, placeHolders, arr\n\n\t\tif (b64.length % 4 > 0) {\n\t\t\tthrow new Error('Invalid string. Length must be a multiple of 4')\n\t\t}\n\n\t\t// the number of equal signs (place holders)\n\t\t// if there are two placeholders, than the two characters before it\n\t\t// represent one byte\n\t\t// if there is only one, then the three characters before it represent 2 bytes\n\t\t// this is just a cheap hack to not do indexOf twice\n\t\tvar len = b64.length\n\t\tplaceHolders = '=' === b64.charAt(len - 2) ? 2 : '=' === b64.charAt(len - 1) ? 1 : 0\n\n\t\t// base64 is 4/3 + up to two characters of the original data\n\t\tarr = new Arr(b64.length * 3 / 4 - placeHolders)\n\n\t\t// if there are placeholders, only get up to the last complete 4 chars\n\t\tl = placeHolders > 0 ? b64.length - 4 : b64.length\n\n\t\tvar L = 0\n\n\t\tfunction push (v) {\n\t\t\tarr[L++] = v\n\t\t}\n\n\t\tfor (i = 0, j = 0; i < l; i += 4, j += 3) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 18) | (decode(b64.charAt(i + 1)) << 12) | (decode(b64.charAt(i + 2)) << 6) | decode(b64.charAt(i + 3))\n\t\t\tpush((tmp & 0xFF0000) >> 16)\n\t\t\tpush((tmp & 0xFF00) >> 8)\n\t\t\tpush(tmp & 0xFF)\n\t\t}\n\n\t\tif (placeHolders === 2) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 2) | (decode(b64.charAt(i + 1)) >> 4)\n\t\t\tpush(tmp & 0xFF)\n\t\t} else if (placeHolders === 1) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 10) | (decode(b64.charAt(i + 1)) << 4) | (decode(b64.charAt(i + 2)) >> 2)\n\t\t\tpush((tmp >> 8) & 0xFF)\n\t\t\tpush(tmp & 0xFF)\n\t\t}\n\n\t\treturn arr\n\t}\n\n\tfunction uint8ToBase64 (uint8) {\n\t\tvar i,\n\t\t\textraBytes = uint8.length % 3, // if we have 1 byte left, pad 2 bytes\n\t\t\toutput = \"\",\n\t\t\ttemp, length\n\n\t\tfunction encode (num) {\n\t\t\treturn lookup.charAt(num)\n\t\t}\n\n\t\tfunction tripletToBase64 (num) {\n\t\t\treturn encode(num >> 18 & 0x3F) + encode(num >> 12 & 0x3F) + encode(num >> 6 & 0x3F) + encode(num & 0x3F)\n\t\t}\n\n\t\t// go through the array every three bytes, we'll deal with trailing stuff later\n\t\tfor (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {\n\t\t\ttemp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n\t\t\toutput += tripletToBase64(temp)\n\t\t}\n\n\t\t// pad the end with zeros, but make sure to not forget the extra bytes\n\t\tswitch (extraBytes) {\n\t\t\tcase 1:\n\t\t\t\ttemp = uint8[uint8.length - 1]\n\t\t\t\toutput += encode(temp >> 2)\n\t\t\t\toutput += encode((temp << 4) & 0x3F)\n\t\t\t\toutput += '=='\n\t\t\t\tbreak\n\t\t\tcase 2:\n\t\t\t\ttemp = (uint8[uint8.length - 2] << 8) + (uint8[uint8.length - 1])\n\t\t\t\toutput += encode(temp >> 10)\n\t\t\t\toutput += encode((temp >> 4) & 0x3F)\n\t\t\t\toutput += encode((temp << 2) & 0x3F)\n\t\t\t\toutput += '='\n\t\t\t\tbreak\n\t\t}\n\n\t\treturn output\n\t}\n\n\texports.toByteArray = b64ToByteArray\n\texports.fromByteArray = uint8ToBase64\n}(typeof exports === 'undefined' ? (this.base64js = {}) : exports))\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/base64-js/lib/b64.js\n ** module id = 14\n ** module chunks = 0\n **/","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/ieee754/index.js\n ** module id = 15\n ** module chunks = 0\n **/","\n/**\n * isArray\n */\n\nvar isArray = Array.isArray;\n\n/**\n * toString\n */\n\nvar str = Object.prototype.toString;\n\n/**\n * Whether or not the given `val`\n * is an array.\n *\n * example:\n *\n *        isArray([]);\n *        // > true\n *        isArray(arguments);\n *        // > false\n *        isArray('');\n *        // > false\n *\n * @param {mixed} val\n * @return {bool}\n */\n\nmodule.exports = isArray || function (val) {\n  return !! val && '[object Array]' == str.call(val);\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/is-array/index.js\n ** module id = 16\n ** module chunks = 0\n **/","///<reference path=\"../typings/tsd.d.ts\"/>\nvar SQLiteWrapper = (function () {\n    function SQLiteWrapper(db) {\n        this.db = db;\n    }\n    SQLiteWrapper.prototype.run = function (sql) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this.db.run(sql, function (err) {\n                if (err) {\n                    console.log(\"SQLiteWrapper.run(): error executing '\" + sql + \"': \", err);\n                    reject(err);\n                }\n                else {\n                    resolve();\n                }\n            });\n        });\n    };\n    SQLiteWrapper.prototype.all = function (tx, sql, params, callback) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this.db.all(sql, params, function (err, rows) {\n                if (err) {\n                    console.log(\"SQLiteWrapper.all(): error executing '\" + sql + \"': \", err);\n                    reject(err);\n                }\n                else {\n                    if (callback) {\n                        resolve(callback(tx, rows));\n                    }\n                    else {\n                        resolve(rows);\n                    }\n                }\n            });\n        });\n    };\n    SQLiteWrapper.prototype.each = function (tx, sql, params, callback) {\n        var _this = this;\n        var p = Promise.resolve();\n        return new Promise(function (resolve, reject) {\n            _this.db.each(sql, params, function (err, row) {\n                if (err) {\n                    console.log(\"SQLiteWrapper.each(): error executing '\" + sql + \"': \", err);\n                    reject(err);\n                }\n                else {\n                    if (callback) {\n                        p = p.then(function () { return callback(tx, row); });\n                    }\n                }\n            }, function (err, count) {\n                if (err) {\n                    console.log(\"SQLiteWrapper.each(): error executing '\" + sql + \"': \", err);\n                    reject(err);\n                }\n                else {\n                    resolve(p);\n                }\n            });\n        });\n    };\n    SQLiteWrapper.prototype.transaction = function (callback) {\n        var _this = this;\n        var result = undefined;\n        return Promise.resolve()\n            .then(function () { return _this.run(\"BEGIN TRANSACTION\"); })\n            .then(function () {\n            var tx = {\n                executeSql: function (sql, params, resultsCb) {\n                    return _this.all(tx, sql, params, resultsCb);\n                },\n                each: function (sql, params, resultsCb) {\n                    return _this.each(tx, sql, params, resultsCb);\n                }\n            };\n            return callback(tx);\n        })\n            .then(function (ret) { return result = ret; })\n            .then(function () { return _this.run(\"COMMIT TRANSACTION\"); })\n            .then(function () { return result; })\n            .catch(function (err) {\n            console.log(\"encountered error, rolling back transaction: \", err);\n            _this.run(\"ROLLBACK TRANSACTION\");\n            throw err;\n        });\n    };\n    SQLiteWrapper.prototype.readTransaction = function (callback) {\n        return this.transaction(callback);\n    };\n    return SQLiteWrapper;\n})();\nfunction wrapSql(db) {\n    return new SQLiteWrapper(db);\n}\nexports.wrapSql = wrapSql;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./SQLiteWrapper.ts\n ** module id = 17\n ** module chunks = 0\n **/","///<reference path=\"./websql.d.ts\"/>\n\"use strict\";\nvar WebsqlWrapper = (function () {\n    function WebsqlWrapper(name, version, displayName, estimatedSize) {\n        version = version || \"1.0\";\n        displayName = displayName || name;\n        estimatedSize = estimatedSize || 5 * 1024 * 1024;\n        this.db = window.openDatabase(name, version, displayName, estimatedSize);\n    }\n    WebsqlWrapper.prototype.all = function (tx, sql, params, callback) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            tx.realTransaction.executeSql(sql, params, function (transaction, resultSet) {\n                var results = [];\n                for (var i = 0; i < resultSet.rows.length; i++) {\n                    var row = resultSet.rows.item(i);\n                    results.push(row);\n                }\n                if (callback) {\n                    resolve(callback(_this.wrapTransaction(transaction), results));\n                }\n                else {\n                    resolve(results);\n                }\n            }, function (transaction, error) {\n                console.error(\"error executing '\" + sql + \"': \", error);\n                reject(error);\n                return true;\n            });\n        });\n    };\n    WebsqlWrapper.prototype.each = function (tx, sql, params, callback) {\n        return new Promise(function (resolve, reject) {\n            tx.realTransaction.executeSql(sql, params, function (transaction, resultSet) {\n                var p = Promise.resolve();\n                for (var i = 0; i < resultSet.rows.length; i++) {\n                    var row = resultSet.rows.item(i);\n                    if (callback) {\n                        (function (row) {\n                            p = p.then(function () { return callback(tx, row); });\n                        })(row);\n                    }\n                }\n                resolve(p);\n            }, function (transaction, error) {\n                console.error(\"error executing '\" + sql + \"': \", error);\n                reject(error);\n                return true;\n            });\n        });\n    };\n    WebsqlWrapper.prototype.wrapTransaction = function (transaction) {\n        var _this = this;\n        var tx = {\n            realTransaction: transaction,\n            executeSql: function (sql, params, callback) {\n                return _this.all(tx, sql, params, callback);\n            },\n            each: function (sql, params, callback) {\n                return _this.each(tx, sql, params, callback);\n            }\n        };\n        return tx;\n    };\n    WebsqlWrapper.prototype.transaction = function (callback) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this.db.transaction(function (transaction) {\n                var tx = _this.wrapTransaction(transaction);\n                resolve(callback(tx));\n            });\n        });\n    };\n    WebsqlWrapper.prototype.readTransaction = function (callback) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this.db.readTransaction(function (transaction) {\n                var tx = _this.wrapTransaction(transaction);\n                resolve(callback(tx));\n            });\n        });\n    };\n    return WebsqlWrapper;\n})();\nfunction wrapWebsql(name, version, displayName, estimatedSize) {\n    return new WebsqlWrapper(name, version, displayName, estimatedSize);\n}\nexports.wrapWebsql = wrapWebsql;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./WebsqlWrapper.ts\n ** module id = 18\n ** module chunks = 0\n **/"],"sourceRoot":""}