{"version":3,"sources":["assign.ts","Text.ts","verify.ts","Column.ts","Database.ts","Mutate.ts","Table.ts","Store.ts","index.ts","Query.ts","SQLiteWrapper.ts","WebsqlWrapper.ts"],"names":["Updraft","Updraft.toObject","Updraft.reviver","Updraft.toText","Updraft.fromText","Updraft.makePrintable","Updraft.verify","Updraft.ColumnType","Updraft.Column","Updraft.Column.constructor","Updraft.Column.Key","Updraft.Column.Index","Updraft.Column.Default","Updraft.Column.deserialize","Updraft.Column.serialize","Updraft.Column.Int","Updraft.Column.Real","Updraft.Column.Bool","Updraft.Column.Text","Updraft.Column.String","Updraft.Column.Enum","Updraft.Column.Date","Updraft.Column.DateTime","Updraft.Column.JSON","Updraft.Column.Set","Updraft.Column.sql","Updraft.Column.fromSql","Updraft.Column.equal","Updraft.DbExecuteSequence","Updraft.shallowCopy","Updraft.shallowEqual","Updraft.keyOf","Updraft.verifyArrayCase","Updraft.verifySetCase","Updraft.mutate","Updraft.isMutated","Updraft.OrderBy","Updraft.Table","Updraft.Table.constructor","Updraft.Table.keyValue","Updraft.tableKey","Updraft.startsWith","Updraft.Store","Updraft.Store.constructor","Updraft.Store.createTable","Updraft.Store.open","Updraft.Store.readSchema","Updraft.Store.syncTable","Updraft.Store.loadKeyValues","Updraft.Store.getValue","Updraft.Store.setValue","Updraft.Store.add","Updraft.Store.find","Updraft.getChangeTableName","Updraft.getSetTableName","Updraft.buildIndices","Updraft.createInternalTableSpecs","Updraft.createChangeTableSpec","Updraft.createSetTableSpecs","Updraft.tableFromSql","Updraft.indexFromSql","Updraft.createTable","Updraft.renameTable","Updraft.dropTable","Updraft.createIndices","Updraft.copyData","Updraft.migrateChangeTable","Updraft.verifyGetValue","Updraft.insert","Updraft.insertElement","Updraft.insertElement.insertElementEachColumn","Updraft.resolve","Updraft.runQuery","Updraft.popValue","Updraft.selectBaseline","Updraft.loadAllExternals","Updraft.loadExternals","Updraft.getChanges","Updraft.applyChanges","Updraft.setLatest","Updraft.invalidateLatest","Updraft.selectableColumns","Updraft.serializeValue","Updraft.deserializeValue","Updraft.serializeChange","Updraft.deserializeChange","Updraft.deserializeRow","Updraft.isEmpty","Updraft.createStore","Updraft.SQLiteWrapper","Updraft.SQLiteWrapper.constructor","Updraft.SQLiteWrapper.run","Updraft.SQLiteWrapper.executeSql","Updraft.SQLiteWrapper.each","Updraft.SQLiteWrapper.transaction","Updraft.SQLiteWrapper.readTransaction","Updraft.createSQLiteWrapper","Updraft.WebsqlWrapper","Updraft.WebsqlWrapper.constructor","Updraft.WebsqlWrapper.trace","Updraft.WebsqlWrapper.stringify","Updraft.WebsqlWrapper.all","Updraft.WebsqlWrapper.each","Updraft.WebsqlWrapper.wrapTransaction","Updraft.WebsqlWrapper.transaction","Updraft.WebsqlWrapper.readTransaction","Updraft.createWebsqlWrapper"],"mappings":"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ACA,CAACA,CAACA;gBACjIA,IAAIA,UAAUA,GAAGA,eAAeA,CAACA;gBACjCA,IAAIA,YAAYA,GAAGA,cAAcA,CAACA;gBAClCA,IAAIA,KAAKA,GAAGA,MAAMA,CAACA,CAACA,CAACA,CAACA,KAAKA,CAACA,UAAUA,CAACA,CAACA;gBACxCA,0BAA0BA;gBAC1BA,EAAEA,CAACA,CAACA,CAACA,KAAKA,CAACA,CAACA,CAACA;oBACZA,KAAKA,GAAGA,MAAMA,CAACA,CAACA,CAACA,CAACA,KAAKA,CAACA,YAAYA,CAACA,CAACA;gBACvCA,CAACA;gBACDA,EAAEA,CAACA,CAACA,KAAKA,CAACA,CAACA,CAACA;oBACXA,KAAKA,CAACA,OAAOA,CAACA,KAAKA,CAACA,CAACA,CAACA,CAACA,GAAGA,cAAMA,CAACA,OAAOA,CAACA,KAAKA,CAACA,CAACA,CAACA,CAACA,CAACA;gBACpDA,CAACA;YACFA,CAACA;YAEDA,0BAA0BA;YAC1BA,EAAEA,CAACA,CAACA,OAAOA,CAACA,MAAMA,GAAGA,CAACA,CAACA,CAACA,CAACA;gBACxBA,IAAIA,EAAEA,GAAGA,OAAOA,CAACA,CAACA,CAACA,CAACA,KAAKA,CAACA,UAAUA,CAACA,CAACA;gBACtCA,0BAA0BA;gBAC1BA,EAAEA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA;oBACRA,IAAIA,IAAIA,GAAGA,EAAEA,CAACA,CAACA,CAACA,CAACA,KAAKA,CAACA,GAAGA,CAACA,CAACA;oBAC5BA,GAAGA,CAACA,CAACA,GAAGA,CAACA,CAACA,GAAGA,CAACA,EAAEA,CAACA,GAAGA,IAAIA,CAACA,MAAMA,EAAEA,CAACA,EAAEA,EAAEA,CAACA;wBACtCA,IAAIA,GAAGA,GAAGA,IAAIA,CAACA,CAACA,CAACA,CAACA,IAAIA,EAAEA,CAACA;wBACzBA,KAAKA,CAACA,OAAOA,CAACA,GAAGA,CAACA,CAACA,KAAKA,GAAGA,IAAIA,CAACA;oBACjCA,CAACA;gBACFA,CAACA;YACFA,CAACA;QACFA,CAACA;QACDA,MAAM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","file":"dist/updraft.js","sourcesContent":["\"use strict\";\n\nnamespace Updraft {\n\t/* istanbul ignore next */\n\tfunction toObject(val: any) {\n\t\tif (val === null || val === undefined) {\n\t\t\tthrow new TypeError(\"Object.assign cannot be called with null or undefined\");\n\t\t}\n\t\treturn Object(val);\n\t}\n\t\n\t/* istanbul ignore next */\n\tlet ObjectAssign = (<any>Object).assign || function (target: Object, source: Object) {\n\t\tconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\t\tconst propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\t\tlet from: Object;\n\t\tlet to = toObject(target);\n\t\tlet symbols: any[];\n\t\n\t\tfor (let s = 1; s < arguments.length; s++) {\n\t\t\tfrom = Object(arguments[s]);\n\t\n\t\t\tfor (let key in from) {\n\t\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\t\tto[key] = from[key];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif ((<any>Object).getOwnPropertySymbols) {\n\t\t\t\tsymbols = (<any>Object).getOwnPropertySymbols(from);\n\t\t\t\tfor (let i = 0; i < symbols.length; i++) {\n\t\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn to;\n\t};\n\t\n\texport var assign = ObjectAssign;\n}\n","\"use strict\";\n\nnamespace Updraft {\n  function reviver(key: string, value: any): any {\n    if (typeof value === \"string\") {\n      let regexp = /^\\d\\d\\d\\d-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d.\\d\\d\\dZ$/.exec(value);\n      if (regexp) {\n        return new Date(value);\n      }\n    }\n    return value;\n  }\n  \n  export function toText(o: any): string {\n    return JSON.stringify(o);\n  }\n  \n  export function fromText(text: string): any {\n    return JSON.parse(text, reviver);\n  }\n}\n","\"use strict\";\n\nnamespace Updraft {\n  /* istanbul ignore next */\n  function makePrintable(x: any): string {\n    if (Array.isArray(x) || (x && typeof x === \"object\")) {\n      return JSON.stringify(x);\n    }\n    else {\n      return x;\n    }\n  }\n  \n  /**\n  * Use verify() to assert state which your program assumes to be true.\n  *\n  * Provide sprintf-style format (only %s is supported) and arguments\n  * to provide information about what broke and what you were\n  * expecting.\n  */\n  export function verify(condition: any, format: string, ...args: any[]) {\n    /* istanbul ignore next */\n    if (!condition) {\n      let argIndex = 0;\n      let error = new Error(\n        format.replace(/%s/g, function() { return makePrintable(args[argIndex++]); })\n      );\n  \n      (<any>error).framesToPop = 1; // we don't care about verify's own frame\n      throw error;\n    }\n  }\n}\n","///<reference path=\"./Text\"/>\n///<reference path=\"./verify\"/>\n\"use strict\";\n\nnamespace Updraft {\n\n\texport enum ColumnType {\n\t\tint,\n\t\treal,\n\t\tbool,\n\t\ttext,\n\t\tenum,\n\t\tdate,\n\t\tdatetime,\n\t\tjson,\n\t\tset\n\t}\n\t\n\t/** A typescript enum class will have string keys resolving to the enum values */\n\texport interface TypeScriptEnum {\n\t\t[enumValue: number]: string;\n\t}\n\t\n\texport interface EnumValue {\n\t\ttoString(): string;\n\t}\n\t\n\t/** An enum class (e.g. (this one)[https://github.com/adrai/enum]) should provide a static method 'get' to resolve strings into enum values */\n\texport interface EnumClass {\n\t\tget(value: string | number): EnumValue;\n\t}\n\t\n\texport type Serializable = string | number;\n\t\n\t/**\n\t* Column in db.  Use static methods to create columns.\n\t*/\n\texport class Column {\n\t\tpublic isKey: boolean;\n\t\tpublic isIndex: boolean;\n\t\tpublic type: ColumnType;\n\t\t//public setTable: ClassTemplate<any>;\n\t\tpublic defaultValue: number | boolean | string;\n\t\tpublic enum: EnumClass | TypeScriptEnum;\n\t\tpublic element: Column;\n\t\n\t\tconstructor(type: ColumnType) {\n\t\t\tthis.type = type;\n\t\t\tif (type == ColumnType.bool) {\n\t\t\t\tthis.defaultValue = false;\n\t\t\t}\n\t\t}\n\t\n\t\t/**\n\t\t\t* Column is the primary key.  Only one column can have this set.\n\t\t\t*/\n\t\tKey(): Column {\n\t\t\tthis.isKey = true;\n\t\t\treturn this;\n\t\t}\n\t\n\t\t/**\n\t\t\t* Create an index for this column for faster queries.\n\t\t\t*/\n\t\tIndex(): Column {\n\t\t\tthis.isIndex = true;\n\t\t\treturn this;\n\t\t}\n\t\n\t\t/**\n\t\t\t* Set a default value for the column\n\t\t\t*/\n\t\t// TODO\n\t\tDefault(value: number | boolean | string): Column {\n\t\t\tif (this.type == ColumnType.bool) {\n\t\t\t\tvalue = value ? true : false;\n\t\t\t}\n\t\t\tthis.defaultValue = value;\n\t\t\treturn this;\n\t\t}\n\t\t\n\t\tdeserialize(value: Serializable): any {\n\t\t\tswitch (this.type) {\n\t\t\t\tcase ColumnType.int:\n\t\t\t\tcase ColumnType.real:\n\t\t\t\tcase ColumnType.text:\n\t\t\t\t\treturn value;\n\t\n\t\t\t\tcase ColumnType.bool:\n\t\t\t\t\treturn value ? true : false;\n\t\n\t\t\t\tcase ColumnType.json:\n\t\t\t\t\treturn fromText(<string>value);\n\t\n\t\t\t\tcase ColumnType.enum:\n\t\t\t\t\tif (typeof (<EnumClass>this.enum).get === \"function\") {\n\t\t\t\t\t\tlet enumValue = (<EnumClass>this.enum).get(value);\n\t\t\t\t\t\tverify(!value || enumValue, \"error getting enum value %s\", value);\n\t\t\t\t\t\treturn enumValue;\n\t\t\t\t\t}\n\t\t\t\t\tverify(value in this.enum, \"enum value %s not in %s\", value, this.enum);\n\t\t\t\t\treturn this.enum[value];\n\t\n\t\t\t\tcase ColumnType.date:\n\t\t\t\tcase ColumnType.datetime:\n\t\t\t\t\tverify(!value || parseFloat(<string>value) == value, \"expected date to be stored as a number: %s\", value);\n\t\t\t\t\treturn value ? new Date(parseFloat(<string>value) * 1000) : undefined;\n\t\t\t\t\t\n\t\t\t\tcase ColumnType.set:\n\t\t\t\t\tverify(<any>value instanceof Set, \"value should already be a set\");\n\t\t\t\t\treturn value;\n\t\n\t\t\t\t/* istanbul ignore next */\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(\"unsupported column type \" + ColumnType[this.type]);\n\t\t\t}\n\t\t}\n\t\t\n\t\tserialize(value: any): Serializable {\n\t\t\tswitch (this.type) {\n\t\t\t\tcase ColumnType.int:\n\t\t\t\tcase ColumnType.real:\n\t\t\t\tcase ColumnType.text:\n\t\t\t\t\treturn value;\n\t\n\t\t\t\tcase ColumnType.bool:\n\t\t\t\t\treturn value ? 1 : 0;\n\t\n\t\t\t\tcase ColumnType.json:\n\t\t\t\t\treturn toText(value);\n\t\n\t\t\t\tcase ColumnType.enum:\n\t\t\t\t\t/* istanbul ignore if: safe to store these in db, though it's probably an error to be anything other than a number/object */\n\t\t\t\t\tif (typeof value === \"string\" || typeof value === undefined || value === null) {\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\t\t\t\t\telse if (typeof value === \"number\") {\n\t\t\t\t\t\tverify(value in this.enum, \"enum doesn't contain %s\", value);\n\t\t\t\t\t\treturn (<TypeScriptEnum>this.enum)[value];\n\t\t\t\t\t}\n\t\t\t\t\tverify(typeof value.toString === \"function\", \"expected an enum value supporting toString(); got %s\", value);\n\t\t\t\t\treturn value.toString();\n\t\n\t\t\t\tcase ColumnType.date:\n\t\t\t\tcase ColumnType.datetime:\n\t\t\t\t\tverify(value == undefined || value instanceof Date, \"expected a date, got %s\", value);\n\t\t\t\t\tlet date = (value == undefined) ? null : ((<Date>value).getTime() / 1000);\n\t\t\t\t\treturn date;\n\t\n\t\t\t\t/* istanbul ignore next */\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(\"unsupported column type \" + ColumnType[this.type]);\n\t\t\t}\n\t\t}\n\t\n\t\t/** create a column with \"INTEGER\" affinity */\n\t\tstatic Int(): Column {\n\t\t\treturn new Column(ColumnType.int);\n\t\t}\n\t\n\t\t/** create a column with \"REAL\" affinity */\n\t\tstatic Real(): Column {\n\t\t\treturn new Column(ColumnType.real);\n\t\t}\n\t\n\t\t/** create a column with \"BOOL\" affinity */\n\t\tstatic Bool(): Column {\n\t\t\treturn new Column(ColumnType.bool);\n\t\t}\n\t\n\t\t/** create a column with \"TEXT\" affinity */\n\t\tstatic Text(): Column {\n\t\t\treturn new Column(ColumnType.text);\n\t\t}\n\t\n\t\t/** create a column with \"TEXT\" affinity */\n\t\tstatic String(): Column {\n\t\t\treturn new Column(ColumnType.text);\n\t\t}\n\t\n\t\t/** a typescript enum or javascript object with instance method \"toString\" and class method \"get\" (e.g. {@link https://github.com/adrai/enum}). */\n\t\tstatic Enum(enum_: EnumClass | TypeScriptEnum): Column {\n\t\t\tlet c = new Column(ColumnType.enum);\n\t\t\tc.enum = enum_;\n\t\t\treturn c;\n\t\t}\n\t\n\t\t/** a javascript Date objct, stored in db as seconds since Unix epoch (time_t) [note: precision is seconds] */\n\t\tstatic Date(): Column {\n\t\t\treturn new Column(ColumnType.date);\n\t\t}\n\t\n\t\t/** a javascript Date objct, stored in db as seconds since Unix epoch (time_t) [note: precision is seconds] */\n\t\tstatic DateTime(): Column {\n\t\t\treturn new Column(ColumnType.datetime);\n\t\t}\n\t\n\t\t/** object will be serialized & restored as JSON text */\n\t\tstatic JSON(): Column {\n\t\t\treturn new Column(ColumnType.json);\n\t\t}\n\t\n\t\t/** unordered collection */\n\t\tstatic Set(type: ColumnType): Column {\n\t\t\tlet c = new Column(ColumnType.set);\n\t\t\tc.element = new Column(type);\n\t\t\treturn c;\n\t\t}\n\t\n\t\n\t\tstatic sql(val: Column): string {\n\t\t\tlet stmt = \"\";\n\t\t\tswitch (val.type) {\n\t\t\t\tcase ColumnType.int:\n\t\t\t\t\tstmt = \"INTEGER\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase ColumnType.bool:\n\t\t\t\t\tstmt = \"BOOLEAN NOT NULL\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase ColumnType.real:\n\t\t\t\t\tstmt = \"REAL\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase ColumnType.text:\n\t\t\t\t\tstmt = \"TEXT\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase ColumnType.json:\n\t\t\t\t\tstmt = \"CLOB\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase ColumnType.enum:\n\t\t\t\t\tstmt = \"CHARACTER(20)\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase ColumnType.date:\n\t\t\t\t\tstmt = \"DATE\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase ColumnType.datetime:\n\t\t\t\t\tstmt = \"DATETIME\";\n\t\t\t\t\tbreak;\n\t\n\t\t\t\t/* istanbul ignore next */\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(\"unsupported type \" + ColumnType[val.type]);\n\t\t\t}\n\t\n\t\t\tif (\"defaultValue\" in val) {\n\t\t\t\tlet escape = function(x: string | number | boolean): string {\n\t\t\t\t\t/* istanbul ignore else */\n\t\t\t\t\tif (typeof x === \"number\") {\n\t\t\t\t\t\treturn <any>x;\n\t\t\t\t\t}\n\t\t\t\t\telse if (typeof x === \"string\") {\n\t\t\t\t\t\treturn \"'\" + (<string>x).replace(/'/g, \"''\") + \"'\";\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tverify(false, \"default value (%s) must be number or string\", x);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tstmt += \" DEFAULT \" + escape(val.serialize(val.defaultValue));\n\t\t\t}\n\t\n\t\t\treturn stmt;\n\t\t}\n\t\n\t\tstatic fromSql(text: string): Column {\n\t\t\tlet parts: string[] = text.split(\" \");\n\t\t\tlet col: Column = null;\n\t\t\tswitch (parts[0]) {\n\t\t\t\tcase \"INTEGER\":\n\t\t\t\t\tcol = Column.Int();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"BOOLEAN\":\n\t\t\t\t\tcol = Column.Bool();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"REAL\":\n\t\t\t\t\tcol = Column.Real();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"TEXT\":\n\t\t\t\t\tcol = Column.Text();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"CLOB\":\n\t\t\t\t\tcol = Column.JSON();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"CHARACTER(20)\":\n\t\t\t\t\tcol = new Column(ColumnType.enum);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"DATE\":\n\t\t\t\t\tcol = Column.Date();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"DATETIME\":\n\t\t\t\t\tcol = Column.DateTime();\n\t\t\t\t\tbreak;\n\t\n\t\t\t\t/* istanbul ignore next */\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(\"unsupported type: \" + ColumnType[parts[0]]);\n\t\t\t}\n\t\n\t\t\tlet match = text.match(/DEFAULT\\s+'((?:[^']|'')*)'/i);\n\t\t\tif (match) {\n\t\t\t\tlet val: any = match[1].replace(/''/g, \"'\");\n\t\t\t\tcol.Default(val);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmatch = text.match(/DEFAULT\\s+(\\S+)/i);\n\t\t\t\tif (match) {\n\t\t\t\t\tlet val: any = match[1];\n\t\t\t\t\tlet valnum = parseFloat(val);\n\t\t\t\t\t/* istanbul ignore else: unlikely to be anything but a number */\n\t\t\t\t\tif (val == valnum) {\n\t\t\t\t\t\tval = valnum;\n\t\t\t\t\t}\n\t\t\t\t\tcol.Default(val);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn col;\n\t\t}\n\t\n\t\tstatic equal(a: Column, b: Column): boolean {\n\t\t\tif (a.type != b.type) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif ((a.defaultValue || b.defaultValue) && (a.defaultValue != b.defaultValue)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t/* istanbul ignore next: I don't think this is possible */\n\t\t\tif ((a.isKey || b.isKey) && (a.isKey != b.isKey)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}\n\t\n\texport interface ColumnSet {\n\t\t[name: string]: Column;\n\t}\n}\n","namespace Updraft {\n\texport interface Rejector {\n\t\t(err: Error): void;\n\t}\n\t\n\texport interface DbStatement {\n\t\tsql: string;\n\t\tparams?: (string | number)[];\n\t}\n\t\n\texport function DbExecuteSequence(transaction: DbTransaction, statements: DbStatement[], nextCallback: DbTransactionCallback) {\n\t\tlet i = 0;\n\t\tlet act = (tx: DbTransaction): void => {\n\t\t\tif (i < statements.length) {\n\t\t\t\tlet which = statements[i];\n\t\t\t\ti++;\n\t\t\t\ttx.executeSql(which.sql, which.params, act);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnextCallback(tx);\n\t\t\t}\n\t\t};\n\t\tact(transaction);\n\t}\n\t\n\texport interface DbErrorCallback {\n\t\t(error: Error): void;\n\t}\n\t\n\texport interface DbWrapper {\n\t\ttransaction(callback: DbTransactionCallback, errorCallback: DbErrorCallback): void;\n\t\treadTransaction(callback: DbTransactionCallback, errorCallback: DbErrorCallback): void;\n\t}\n\t\n\texport interface DbTransactionCallback {\n\t\t(transaction: DbTransaction): void;\n\t}\n\t\n\texport interface DbTransaction {\n\t\texecuteSql(sql: string, params: (string | number)[], callback: DbResultsCallback): void;\n\t\teach(sql: string, params: (string | number)[], callback: DbEachResultCallback, final: DbTransactionCallback): void;\n\t}\n\t\n\texport interface DbResultsCallback {\n\t\t(transaction: DbTransaction, results: any[]): void;\n\t}\n\t\n\texport interface DbEachResultCallback {\n\t\t(transaction: DbTransaction, result: any): void;\n\t}\n\t\n\texport interface DbCallback<Result> {\n\t\t(transaction: DbTransaction, result: Result): void;\n\t}\n}\n","// written to React\"s immutability helpers spec\n// see https://facebook.github.io/react/docs/update.html\n\n///<reference path=\"../typings/tsd.d.ts\"/>\n///<reference path=\"./assign\"/>\n///<reference path=\"./verify\"/>\n\"use strict\";\n\nnamespace Updraft {\n  export namespace Mutate {\n    export interface setter<T> {\n      $set: T;\n    }\n    \n    export interface increment {\n      $inc: number;\n    }\n    \n    export interface push<T> {\n      $push: Array<T>;\n    }\n    \n    export interface unshift<T> {\n      $unshift: Array<T>;\n    }\n    \n    export interface splice<T> {\n      // array.splice(start, deleteCount[, item1[, item2[, ...]]])\n      $splice: Array<Array<number | T>>;\n    }\n    \n    export interface merge<T> {\n      $merge: T;\n    }\n    \n    export interface add<T> {\n      $add: Array<T>;\n    }\n    \n    export interface deleter<T> {\n      $delete: Array<T>;\n    }\n    \n    export type primitive<T> =\n      setter<T>;\n    \n    export type none = void;\n    export type bool = primitive<boolean>;\n    export type num = primitive<number> | increment;\n    export type str = primitive<string>;\n    export type date = setter<Date>;\n    export type obj = primitive<Object> | merge<Object> | deleter<string>;\n    export type enm<T> = primitive<T>;\n    \n    export type array<T> =\n      setter<Array<T>> |\n      push<T> |\n      unshift<T> |\n      splice<T> |\n      merge<T>;\n    \n    export type strArray = array<string>;\n    export type numArray = array<number>;\n    export type objArray = array<Object>;\n    \n    export type set<T> =\n      setter<Set<T>> |\n      add<T> |\n      deleter<T>;\n    \n    export type strSet = set<string>;\n  }\n  \n  export function shallowCopy<T>(x: T): T {\n    /* istanbul ignore else: not sure about this one */\n    if (Array.isArray(x)) {\n      return (<any>x).concat();\n    }\n    else if (x instanceof Set) {\n      return <any>new Set<T>(<any>x);\n    }\n    else if (typeof x === \"object\") {\n      return assign(new (<any>x).constructor(), x);\n    }\n    else {\n      /* istanbul ignore next: correct AFAIK but unreachable */\n      return x;\n    }\n  }\n  \n  export function shallowEqual<T>(a: T, b: T): boolean {\n    if (Array.isArray(a) && Array.isArray(b)) {\n      let aa: any[] = <any>a;\n      let bb: any[] = <any>b;\n      if (aa.length == bb.length) {\n        for (let i = 0; i < aa.length; i++) {\n          if (aa[i] != bb[i]) {\n            return false;\n          }\n        }\n        return true;\n      }\n      return false;\n    }\n    else if (a instanceof Set && b instanceof Set) {\n      let aa: Set<any> = <any>a;\n      let bb: Set<any> = <any>b;\n      if (aa.size == bb.size) {\n        let equal = true;\n        aa.forEach((elt) => {\n          if (equal && !bb.has(elt)) {\n            equal = false;\n          }\n        });\n        return equal;\n      }\n      return false;\n    }\n    else if (a instanceof Date && b instanceof Date) {\n      return (<Date><any>a).getTime() == (<Date><any>b).getTime();\n    }\n    else if (a && typeof a == \"object\" && b && typeof b == \"object\") {\n      let akeys = Object.keys(a);\n      let bkeys = Object.keys(b);\n      if (akeys.length == bkeys.length) {\n        for (let key of akeys) {\n          if (!(key in b) || a[key] != b[key]) {\n            return false;\n          }\n        }\n        return true;\n      }\n      return false;\n    }\n    return a == b;\n  }\n  \n  \n  export let hasOwnProperty = {}.hasOwnProperty;\n  export function keyOf(obj: Object) { return Object.keys(obj)[0]; }\n  \n  let command = {\n    set: keyOf({$set: null}),\n    increment: keyOf({$inc: null}),\n    push: keyOf({$push: null}),\n    unshift: keyOf({$unshift: null}),\n    splice: keyOf({$splice: null}),\n    merge: keyOf({$merge: null}),\n    add: keyOf({$add: null}),\n    deleter: keyOf({$delete: null}),\n  };\n  \n  \n  function verifyArrayCase(value: any, spec: any, c: string) {\n    verify(\n      Array.isArray(value),\n      \"mutate(): expected target of %s to be an array; got %s.\",\n      c,\n      value\n    );\n    let specValue = spec[c];\n    verify(\n      Array.isArray(specValue),\n      \"mutate(): expected spec of %s to be an array; got %s. \" +\n      \"Did you forget to wrap your parameter in an array?\",\n      c,\n      specValue\n    );\n  }\n  \n  function verifySetCase(value: any, spec: any, c: string) {\n    verify(\n      value instanceof Set,\n      \"mutate(): expected target of %s to be a set; got %s.\",\n      c,\n      value\n    );\n    let specValue = spec[c];\n    verify(\n      Array.isArray(specValue),\n      \"mutate(): expected spec of %s to be an array; got %s. \" +\n      \"Did you forget to wrap your parameter in an array?\",\n      c,\n      specValue\n    );\n  }\n  \n  export function mutate<Element, Mutator>(value: Element, spec: Mutator): Element {\n    verify(\n      typeof spec === \"object\",\n      \"mutate(): You provided a key path to mutate() that did not contain one \" +\n      \"of %s. Did you forget to include {%s: ...}?\",\n      Object.keys(command).join(\", \"),\n      command.set\n    );\n  \n    // verify(\n    // \tObject.keys(spec).reduce( function(previousValue: boolean, currentValue: string): boolean {\n    // \t\treturn previousValue && (keyOf(spec[currentValue]) in command);\n    // \t}, true),\n    // \t\"mutate(): argument has an unknown key; supported keys are (%s).  mutator: %s\",\n    // \tObject.keys(command).join(\", \"),\n    // \tspec\n    // );\n  \n    if (hasOwnProperty.call(spec, command.set)) {\n      verify(\n        Object.keys(spec).length === 1,\n        \"Cannot have more than one key in an object with %s\",\n        command.set\n      );\n  \n      return shallowEqual(value, spec[command.set]) ? value : spec[command.set];\n    }\n  \n    if (hasOwnProperty.call(spec, command.increment)) {\n      verify(\n        typeof(value) === \"number\" && typeof(spec[command.increment]) === \"number\",\n        \"Source (%s) and argument (%s) to %s must be numbers\",\n        value,\n        spec[command.increment],\n        command.increment\n      );\n  \n      return value + spec[command.increment];\n    }\n  \n    let changed = false;\n  \n    if (hasOwnProperty.call(spec, command.merge)) {\n      let mergeObj = spec[command.merge];\n      let nextValue = <any>shallowCopy(value);\n      verify(\n        mergeObj && typeof mergeObj === \"object\",\n        \"mutate(): %s expects a spec of type 'object'; got %s\",\n        command.merge,\n        mergeObj\n      );\n      verify(\n        nextValue && typeof nextValue === \"object\",\n        \"mutate(): %s expects a target of type 'object'; got %s\",\n        command.merge,\n        nextValue\n      );\n      assign(nextValue, spec[command.merge]);\n      return shallowEqual(value, nextValue) ? value : nextValue;\n    }\n  \n    if (hasOwnProperty.call(spec, command.deleter) && (typeof value === \"object\") && !(value instanceof Set)) {\n      let keys = <any[]>spec[command.deleter];\n      verify(\n        keys && Array.isArray(keys),\n        \"mutate(): %s expects a spec of type 'array'; got %s\",\n        command.deleter,\n        keys\n      );\n      let nextValue = <any>shallowCopy(value);\n      changed = false;\n      keys.forEach((key: string) => {\n        if (key in value) {\n          delete nextValue[key];\n          changed = true;\n        }\n      });\n      return changed ? <any>nextValue : value;\n    }\n  \n    if (hasOwnProperty.call(spec, command.push)) {\n      let nextValue: any[] = <any>shallowCopy(value) || [];\n      verifyArrayCase(nextValue, spec, command.push);\n      if (spec[command.push].length) {\n        nextValue.push.apply(nextValue, spec[command.push]);\n        return <any>nextValue;\n      }\n      else {\n        return value;\n      }\n    }\n  \n    if (hasOwnProperty.call(spec, command.unshift)) {\n      verifyArrayCase(value, spec, command.unshift);\n      if (spec[command.unshift].length) {\n        let nextValue: any[] = <any>shallowCopy(value);\n        nextValue.unshift.apply(nextValue, spec[command.unshift]);\n        return <any>nextValue;\n      }\n      else {\n        return value;\n      }\n    }\n  \n    if (hasOwnProperty.call(spec, command.splice)) {\n      let nextValue: any = <any>shallowCopy(value);\n      verify(\n        Array.isArray(value),\n        \"Expected %s target to be an array; got %s\",\n        command.splice,\n        value\n      );\n      verify(\n        Array.isArray(spec[command.splice]),\n        \"mutate(): expected spec of %s to be an array of arrays; got %s. \" +\n        \"Did you forget to wrap your parameters in an array?\",\n        command.splice,\n        spec[command.splice]\n      );\n      spec[command.splice].forEach(function(args: any) {\n        verify(\n          Array.isArray(args),\n          \"mutate(): expected spec of %s to be an array of arrays; got %s. \" +\n          \"Did you forget to wrap your parameters in an array?\",\n          command.splice,\n          spec[command.splice]\n        );\n        (<any>nextValue).splice.apply(nextValue, args);\n      });\n      return shallowEqual(nextValue, value) ? value : nextValue;\n    }\n  \n    if (hasOwnProperty.call(spec, command.add)) {\n      let nextValue: Set<any> = <any>shallowCopy(value) || new Set<any>();\n      verifySetCase(nextValue, spec, command.add);\n      spec[command.add].forEach(function(item: any) {\n        if (!nextValue.has(item)) {\n          nextValue.add(item);\n          changed = true;\n        }\n      });\n      return changed ? <any>nextValue : value;\n    }\n  \n    if (hasOwnProperty.call(spec, command.deleter) && (value instanceof Set)) {\n      let nextValue: Set<any> = <any>shallowCopy(value);\n      verifySetCase(value, spec, command.deleter);\n      spec[command.deleter].forEach(function(item: any) {\n        if (nextValue.delete(item)) {\n          changed = true;\n        }\n      });\n      return changed ? <any>nextValue : value;\n    }\n  \n    let nextValue: any;\n    for (let k in spec) {\n      if (typeof value === \"object\" && !(command.hasOwnProperty(k))) {\n        let oldValue = value[k];\n        let newValue = mutate(oldValue, spec[k]);\n        if (oldValue !== newValue) {\n          if (!nextValue) {\n            nextValue = <any>shallowCopy(value);\n          }\n          nextValue[k] = newValue;\n          changed = true;\n        }\n      }\n    }\n  \n    return changed ? nextValue : value;\n  }\n  \n  \n  export function isMutated<Element>(a: Element, b: Element): boolean {\n    return a !== b;\n  }\n}\n","///<reference path=\"./Column\"/>\n///<reference path=\"./verify\"/>\n\"use strict\";\n\nnamespace Updraft {\n\texport type KeyType = string | number;\n\t\n\texport interface TableChange<Element, Mutator> {\n\t\ttime?: number;\n\t\tdelete?: KeyType;\n\t\tchange?: Mutator;\n\t\tsave?: Element;\n\t}\n\t\n\texport interface TableSpec<Element, Mutator, Query> {\n\t\tname: string;\n\t\tcolumns: ColumnSet;\n\t\trenamedColumns?: RenamedColumnSet;\n\t\tindices?: string[][];\n\t\tclazz?: new (props: Element) => Element; \n\t}\n\t\n\texport interface RenamedColumnSet {\n\t\t\t[oldColumnName: string]: string;\n\t}\n\t\n\texport enum OrderBy {\n\t\tASC,\n\t\tDESC\n\t}\n\t\n\texport interface OrderBySpec {\n\t\t[name: string]: OrderBy;\n\t}\n\t\n\texport interface FieldSpec {\n\t\t[fieldName: string]: boolean;\n\t}\n\t\n\texport interface FindOpts {\n\t\tfields?: FieldSpec;\n\t\torderBy?: OrderBySpec;\n\t\toffset?: number;\n\t\tlimit?: number;\n\t\tcount?: boolean;\n\t}\n\t\n\texport class Table<Element, Mutator, Query> {\n\t\tspec: TableSpec<Element, Mutator, Query>;\n\t\tkey: KeyType;\n\t\n\t\tconstructor(spec: TableSpec<Element, Mutator, Query>) {\n\t\t\tthis.spec = spec;\n\t\t\tthis.key = tableKey(spec);\n\t\t}\n\t\n\t\tkeyValue(element: Element | Mutator): KeyType {\n\t\t\tverify(this.key in element, \"object does not have key field '%s' set: %s\", this.key, element);\n\t\t\treturn element[this.key];\n\t\t}\n\t\n\t\tfind: (query: Query, opts?: FindOpts) => Promise<Element[]>;\n\t\tadd: (...changes: TableChange<Element, Mutator>[]) => Promise<any>;\n\t}\n\t\n\t\n\texport function tableKey(spec: TableSpec<any, any, any>): KeyType {\n\t\tlet key: KeyType = null;\n\t\tfor (let name in spec.columns) {\n\t\t\tlet column = spec.columns[name];\n\t\t\tverify(column, \"column '%s' is not in %s\", name, spec);\n\t\t\tif (column.isKey) {\n\t\t\t\tverify(!key, \"Table %s has more than one key- %s and %s\", spec.name, key, name);\n\t\t\t\tkey = name;\n\t\t\t}\n\t\t}\n\t\n\t\tverify(key, \"Table %s does not have a key\", spec.name);\n\t\treturn key;\n\t}\n}\n","///<reference path=\"./Mutate\"/>\n///<reference path=\"./Column\"/>\n///<reference path=\"./Database\"/>\n///<reference path=\"./Table\"/>\n///<reference path=\"./Text\"/>\n///<reference path=\"./assign\"/>\n///<reference path=\"./verify\"/>\n\"use strict\";\n\nnamespace Updraft {\n\n\tfunction startsWith(str: string, val: string) {\n\t\treturn str.lastIndexOf(val, 0) === 0;\n\t}\n\t\n\texport type TableSpecAny = TableSpec<any, any, any>;\n\texport type TableAny = Table<any, any, any>;\n\t\n\texport interface CreateStoreParams {\n\t\tdb: DbWrapper;\n\t}\n\t\n\texport interface Schema {\n\t\t[table: string]: TableSpecAny;\n\t}\n\t\n\tinterface Resolver<T> {\n\t\t(param: T): void;\n\t}\n\t\n\tinterface SqliteMasterRow {\n\t\ttype: string;\n\t\tname: string;\n\t\ttbl_name: string;\n\t\tsql: string;\n\t}\n\t\n\tinterface BaselineInfo<Element> {\n\t\telement: Element;\n\t\ttime: number;\n\t\trowid: number;\n\t}\n\t\n\tinterface ChangeTableRow {\n\t\tkey?: KeyType;\n\t\ttime?: number;\n\t\tchange?: string;\n\t}\n\t\n\tinterface SetTableRow {\n\t\tkey?: KeyType;\n\t\ttime?: number;\n\t\tvalue?: string;\n\t}\n\n\tinterface KeyValue {\n\t\tkey?: string;\n\t\tvalue?: any; // stored as JSON\n\t}\n\t\n\tinterface KeyValueMap {\n\t\t[key: string]: any;\n\t}\n\n\tconst ROWID = \"rowid\";\n\tconst COUNT = \"COUNT(*)\";\n\tconst internal_prefix = \"updraft_\";\n\tconst internal_column_deleted = internal_prefix + \"deleted\";\n\tconst internal_column_time = internal_prefix + \"time\";\n\tconst internal_column_latest = internal_prefix + \"latest\";\n\tconst internal_column_composed = internal_prefix + \"composed\";\n\tconst internalColumn: ColumnSet = {};\n\tinternalColumn[internal_column_deleted] = Column.Bool();\n\tinternalColumn[internal_column_time] = Column.Int().Key();\n\tinternalColumn[internal_column_latest] = Column.Bool();\n\tinternalColumn[internal_column_composed] = Column.Bool();\n\t\n\tconst deleteRow_action = { [internal_column_deleted]: { $set: true } };\n\t\n\tconst keyValueTableSpec: TableSpec<KeyValue, any, any> = {\n\t\tname: internal_prefix + \"keyValues\",\n\t\tcolumns: {\n\t\t\tkey: Column.String().Key(),\n\t\t\tvalue: Column.JSON(),\n\t\t}\n\t};\n\t\n\texport class Store {\n\t\tprivate params: CreateStoreParams;\n\t\tprivate tables: TableSpecAny[];\n\t\tprivate db: DbWrapper;\n\t\tprivate keyValueTable: Table<KeyValue, any, any>;\n\t\tprivate keyValues: KeyValueMap;\n\t\n\t\tconstructor(params: CreateStoreParams) {\n\t\t\tthis.params = params;\n\t\t\tthis.tables = [];\n\t\t\tthis.db = null;\n\t\t\tverify(this.params.db, \"must pass a DbWrapper\");\n\t\t\tthis.keyValueTable = this.createTable<KeyValue, any, any>(keyValueTableSpec);\n\t\t}\n\t\n\t\tcreateTable<Element, Mutator, Query>(tableSpec: TableSpec<Element, Mutator, Query>): Table<Element, Mutator, Query> {\n\t\t\tverify(!this.db, \"createTable() can only be added before open()\");\n\t\t\tif (tableSpec !== keyValueTableSpec) {\n\t\t\t\tverify(!startsWith(tableSpec.name, internal_prefix), \"table name %s cannot begin with %s\", tableSpec.name, internal_prefix);\n\t\t\t}\n\t\t\tfor (let col in tableSpec.columns) {\n\t\t\t\tverify(!startsWith(col, internal_prefix), \"table %s column %s cannot begin with %s\", tableSpec.name, col, internal_prefix);\n\t\t\t}\n\t\t\tlet table = new Table<Element, Mutator, Query>(tableSpec);\n\t\t\ttable.add = (...changes: TableChange<Element, Mutator>[]): Promise<any> => this.add(table, ...changes);\n\t\t\ttable.find = (query: Query, opts?: FindOpts): Promise<Element[]> => this.find(table, query, opts);\n\t\t\tthis.tables.push(...createInternalTableSpecs(table));\n\t\t\tthis.tables.push(createChangeTableSpec(table));\n\t\t\treturn table;\n\t\t}\n\t\n\t\topen(): Promise<any> {\n\t\t\tverify(!this.db, \"open() called more than once!\");\n\t\t\tverify(this.tables.length, \"open() called before any tables were added\");\n\t\n\t\t\tthis.db = this.params.db;\n\t\n\t\t\treturn Promise.resolve()\n\t\t\t\t.then(() => this.readSchema())\n\t\t\t\t.then((schema) => {\n\t\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\t\tlet i = 0;\n\t\t\t\t\t\tlet act = (transaction: DbTransaction) => {\n\t\t\t\t\t\t\tif (i < this.tables.length) {\n\t\t\t\t\t\t\t\tlet table = this.tables[i];\n\t\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t\t\tthis.syncTable(transaction, schema, table, act);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tthis.loadKeyValues(transaction, resolve);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\tthis.db.transaction(act, reject);\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t;\n\t\t}\n\t\n\t\treadSchema(): Promise<Schema> {\n\t\t\tverify(this.db, \"readSchema(): not opened\");\n\t\t\t\n\t\t\treturn new Promise((resolve: Resolver<Schema>, reject: DbErrorCallback) => {\n\t\t\t\tthis.db.readTransaction((transaction: DbTransaction) => {\n\t\t\t\t\treturn transaction.executeSql(\"SELECT name, tbl_name, type, sql FROM sqlite_master\", [], (tx: DbTransaction, resultSet: any[]) => {\n\t\t\t\t\t\tlet schema: Schema = {};\n\t\t\t\t\t\tfor (let i = 0; i < resultSet.length; i++) {\n\t\t\t\t\t\t\tlet row = <SqliteMasterRow>resultSet[i];\n\t\t\t\t\t\t\tif (row.name[0] != \"_\" && !startsWith(row.name, \"sqlite\")) {\n\t\t\t\t\t\t\t\tswitch (row.type) {\n\t\t\t\t\t\t\t\t\tcase \"table\":\n\t\t\t\t\t\t\t\t\t\tschema[row.name] = tableFromSql(row.name, row.sql);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase \"index\":\n\t\t\t\t\t\t\t\t\t\tlet index = indexFromSql(row.sql);\n\t\t\t\t\t\t\t\t\t\tif (index.length == 1) {\n\t\t\t\t\t\t\t\t\t\t\tlet col = index[0];\n\t\t\t\t\t\t\t\t\t\t\tverify(row.tbl_name in schema, \"table %s used by index %s should have been returned first\", row.tbl_name, row.name);\n\t\t\t\t\t\t\t\t\t\t\tverify(col in schema[row.tbl_name].columns, \"table %s does not have column %s used by index %s\", row.tbl_name, col, row.name);\n\t\t\t\t\t\t\t\t\t\t\tschema[row.tbl_name].columns[col].isIndex = true;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\t\tschema[row.tbl_name].indices.push(index);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t// case \"trigger\":\n\t\t\t\t\t\t\t\t\t// \tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\n\t\t\t\t\t\tresolve(schema);\n\t\t\t\t\t});\n\t\t\t\t}, reject);\n\t\t\t});\n\t\t}\n\n\t\tprivate syncTable(transaction: DbTransaction, schema: Schema, spec: TableSpecAny, nextCallback: DbTransactionCallback): void {\n\t\t\tif (spec.name in schema) {\n\t\t\t\tlet oldColumns = schema[spec.name].columns;\n\t\t\t\tlet newColumns = spec.columns;\n\t\t\t\tlet recreateTable: boolean = false;\n\t\n\t\t\t\tfor (let colName in oldColumns) {\n\t\t\t\t\tif (!(colName in newColumns)) {\n\t\t\t\t\t\trecreateTable = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tlet oldCol = oldColumns[colName];\n\t\t\t\t\tlet newCol = newColumns[colName];\n\t\t\t\t\tif (!Column.equal(oldCol, newCol)) {\n\t\t\t\t\t\trecreateTable = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tlet renamedColumns = shallowCopy(spec.renamedColumns) || {};\n\t\t\t\tfor (let colName in renamedColumns) {\n\t\t\t\t\tif (colName in oldColumns) {\n\t\t\t\t\t\trecreateTable = true;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tdelete renamedColumns[colName];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tlet addedColumns: ColumnSet = {};\n\t\t\t\tif (!recreateTable) {\n\t\t\t\t\tfor (let colName of selectableColumns(spec, newColumns)) {\n\t\t\t\t\t\tif (!(colName in oldColumns)) {\n\t\t\t\t\t\t\taddedColumns[colName] = newColumns[colName];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tif (recreateTable) {\n\t\t\t\t\t// recreate and migrate data\n\t\n\t\t\t\t\tlet tempTableName = \"temp_\" + spec.name;\n\t\t\t\t\tlet changeTableName = getChangeTableName(spec.name);\n\t\n\t\t\t\t\tdropTable(transaction, tempTableName, (tx2: DbTransaction) => {\n\t\t\t\t\t\tcreateTable(tx2, tempTableName, spec.columns, (tx3: DbTransaction) => {\n\t\t\t\t\t\t\tcopyData(tx3, spec.name, tempTableName, oldColumns, newColumns, renamedColumns, (tx4: DbTransaction) => {\n\t\t\t\t\t\t\t\tdropTable(tx4, spec.name, (tx5: DbTransaction) => {\n\t\t\t\t\t\t\t\t\trenameTable(tx5, tempTableName, spec.name, (tx6: DbTransaction) => {\n\t\t\t\t\t\t\t\t\t\tmigrateChangeTable(tx6, changeTableName, oldColumns, newColumns, renamedColumns, (tx7: DbTransaction) => {\n\t\t\t\t\t\t\t\t\t\t\tcreateIndices(tx7, schema, spec, true, nextCallback);\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse if (!isEmpty(addedColumns)) {\n\t\t\t\t\t// alter table, add columns\n\t\t\t\t\tlet stmts: DbStatement[] = [];\n\t\t\t\t\tObject.keys(addedColumns).forEach((colName) => {\n\t\t\t\t\t\tlet col: Column = spec.columns[colName];\n\t\t\t\t\t\tlet columnDecl = colName + \" \" + Column.sql(col);\n\t\t\t\t\t\tstmts.push({sql: \"ALTER TABLE \" + spec.name + \" ADD COLUMN \" + columnDecl});\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\tDbExecuteSequence(transaction, stmts, (tx2: DbTransaction) => {\n\t\t\t\t\t\tcreateIndices(tx2, schema, spec, false, nextCallback);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// no table modification is required\n\t\t\t\t\tcreateIndices(transaction, schema, spec, false, nextCallback);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// create new table\n\t\t\t\tcreateTable(transaction, spec.name, spec.columns, (tx2: DbTransaction) => {\n\t\t\t\t\tcreateIndices(tx2, schema, spec, true, nextCallback);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\t\n\t\tprivate loadKeyValues(transaction: DbTransaction, nextCallback: DbTransactionCallback): void {\n\t\t\treturn runQuery(transaction, this.keyValueTable, {}, undefined, undefined, (tx2: DbTransaction, rows: KeyValue[]) => {\n\t\t\t\tthis.keyValues = {};\n\t\t\t\trows.forEach((row: KeyValue) => {\n\t\t\t\t\tthis.keyValues[row.key] = row.value;\n\t\t\t\t});\n\t\t\t\tnextCallback(tx2);\n\t\t\t});\n\t\t}\n\n\t\tgetValue(key: string): any {\n\t\t\treturn this.keyValues[key];\n\t\t}\n\t\t\n\t\tsetValue(key: string, value: any): Promise<any> {\n\t\t\tthis.keyValues[key] = value;\n\t\t\treturn this.keyValueTable.add({save: {key, value}});\n\t\t}\n\t\n\t\tadd<Element, Mutator>(table: Table<Element, Mutator, any>, ...changes: TableChange<Element, Mutator>[]): Promise<any> {\n\t\t\tverify(this.db, \"apply(): not opened\");\n\t\t\tlet changeTable = getChangeTableName(table.spec.name);\n\n\t\t\treturn new Promise((promiseResolve, reject) => {\n\t\t\t\tlet i = 0;\n\t\t\t\tlet toResolve = new Set<KeyType>();\n\t\t\t\tlet insertNextChange: DbTransactionCallback = null;\n\t\t\t\tlet resolveChanges: DbTransactionCallback = null;\n\n\t\t\t\tinsertNextChange = (transaction: DbTransaction) => {\n\t\t\t\t\tif (i < changes.length) {\n\t\t\t\t\t\tlet change = changes[i];\n\t\t\t\t\t\ti++;\n\t\t\t\t\t\tlet time = change.time || Date.now();\n\t\t\t\t\t\tverify((change.save ? 1 : 0) + (change.change ? 1 : 0) + (change.delete ? 1 : 0) === 1, \"change (%s) must specify exactly one action at a time\", change);\n\t\t\t\t\t\t/* istanbul ignore else */\n\t\t\t\t\t\tif (change.save) {\n\t\t\t\t\t\t\t// append internal column values\n\t\t\t\t\t\t\tlet element = assign(\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tchange.save,\n\t\t\t\t\t\t\t\t{ [internal_column_time]: time }\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\ttoResolve.add(table.keyValue(element));\n\t\t\t\t\t\t\tinsertElement(transaction, table, element, insertNextChange);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (change.change || change.delete) {\n\t\t\t\t\t\t\tlet changeRow: ChangeTableRow = {\n\t\t\t\t\t\t\t\tkey: null,\n\t\t\t\t\t\t\t\ttime: time,\n\t\t\t\t\t\t\t\tchange: null\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tif (change.change) {\n\t\t\t\t\t\t\t\t// store changes\n\t\t\t\t\t\t\t\tlet mutator = shallowCopy(change.change);\n\t\t\t\t\t\t\t\tchangeRow.key = table.keyValue(mutator);\n\t\t\t\t\t\t\t\tdelete mutator[table.key];\n\t\t\t\t\t\t\t\tchangeRow.change = serializeChange(mutator, table.spec);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t// mark deleted\n\t\t\t\t\t\t\t\tchangeRow.key = change.delete;\n\t\t\t\t\t\t\t\tchangeRow.change = serializeChange(deleteRow_action, table.spec);\n\t\t\t\t\t\t\t}\n\t\t\n\t\t\t\t\t\t\t// insert into change table\n\t\t\t\t\t\t\tlet columns = Object.keys(changeRow);\n\t\t\t\t\t\t\tlet values: any[] = columns.map(k => changeRow[k]);\n\t\t\t\t\t\t\ttoResolve.add(changeRow.key);\n\t\t\t\t\t\t\tinsert(transaction, changeTable, columns, values, insertNextChange);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\t\t\tthrow new Error(\"no operation specified for change- should be one of save, change, or delete\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tresolveChanges(transaction);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tresolveChanges = (transaction: DbTransaction) => {\n\t\t\t\t\tlet j = 0;\n\t\t\t\t\tlet toResolveArray: KeyType[] = [];\n\t\t\t\t\ttoResolve.forEach((keyValue: KeyType) => toResolveArray.push(keyValue));\n\t\t\t\t\tlet resolveNextChange = (tx2: DbTransaction) => {\n\t\t\t\t\t\tif (j < toResolveArray.length) {\n\t\t\t\t\t\t\tlet keyValue = toResolveArray[j];\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t\tresolve(tx2, table, keyValue, resolveNextChange);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tpromiseResolve();\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tresolveNextChange(transaction);\n\t\t\t\t};\n\t\t\t\n\t\t\t\tthis.db.transaction(insertNextChange, reject);\n\t\t\t});\n\t\t}\n\t\n\t\tfind<Element, Query>(table: Table<Element, any, Query>, query: Query, opts?: FindOpts): Promise<Element[]> {\n\t\t\treturn new Promise((resolve: Resolver<Element[]>, reject: DbErrorCallback) => {\n\t\t\t\tthis.db.readTransaction((transaction: DbTransaction) => {\n\t\t\t\t\tlet q = assign({}, query, {\n\t\t\t\t\t\t[internal_column_deleted]: false,\n\t\t\t\t\t\t[internal_column_latest]: true,\n\t\t\t\t\t});\n\t\t\t\t\trunQuery(transaction, table, q, opts, table.spec.clazz, (tx2: DbTransaction, results: Element[]) => {\n\t\t\t\t\t\tresolve(results);\n\t\t\t\t\t});\n\t\t\t\t}, reject);\n\t\t\t});\n\t\t}\n\t}\n\t\n\tfunction getChangeTableName(name: string): string {\n\t\treturn internal_prefix + \"changes_\" + name;\n\t}\n\t\n\tfunction getSetTableName(tableName: string, col: string): string {\n\t\treturn internal_prefix + \"set_\" + tableName + \"_\" + col;\n\t}\n\t\n\tfunction buildIndices(spec: TableSpecAny) {\n\t\tspec.indices = shallowCopy(spec.indices) || [];\n\t\tfor (let col in spec.columns) {\n\t\t\tif (spec.columns[col].isIndex) {\n\t\t\t\tspec.indices.push([col]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction createInternalTableSpecs(table: Table<any, any, any>): TableSpecAny[] {\n\t\tlet newSpec = shallowCopy(table.spec);\n\t\tnewSpec.columns = shallowCopy(table.spec.columns);\n\t\tfor (let col in internalColumn) {\n\t\t\tverify(!table.spec.columns[col], \"table %s cannot have reserved column name %s\", table.spec.name, col);\n\t\t\tnewSpec.columns[col] = internalColumn[col];\n\t\t}\n\t\tbuildIndices(newSpec);\n\t\treturn [newSpec, ...createSetTableSpecs(newSpec, verifyGetValue(newSpec.columns, table.key))];\n\t}\n\t\n\tfunction createChangeTableSpec(table: Table<any, any, any>): TableSpecAny {\n\t\tlet newSpec = <TableSpecAny>{\n\t\t\tname: getChangeTableName(table.spec.name),\n\t\t\tcolumns: {\n\t\t\t\tkey: Column.Int().Key(),\n\t\t\t\ttime: Column.DateTime().Key(),\n\t\t\t\tchange: Column.JSON(),\n\t\t\t}\n\t\t};\n\t\tbuildIndices(newSpec);\n\t\treturn newSpec;\n\t}\n\t\n\tfunction createSetTableSpecs(spec: TableSpecAny, keyColumn: Column): TableSpecAny[] {\n\t\tlet newSpecs: TableSpecAny[] = [];\n\t\tfor (let col in spec.columns) {\n\t\t\tlet column = spec.columns[col];\n\t\t\tif (column.type == ColumnType.set) {\n\t\t\t\tlet newSpec = <TableSpecAny>{\n\t\t\t\t\tname: getSetTableName(spec.name, col),\n\t\t\t\t\tcolumns: {\n\t\t\t\t\t\tkey: keyColumn,\n\t\t\t\t\t\tvalue: new Column(column.element.type).Key(),\n\t\t\t\t\t\ttime: Column.Int().Key()\n\t\t\t\t\t}\n\t\t\t\t};\n\t\n\t\t\t\tbuildIndices(newSpec);\n\t\t\t\tnewSpecs.push(newSpec);\n\t\t\t}\n\t\t}\n\t\treturn newSpecs;\n\t}\n\t\n\tfunction tableFromSql(name: string, sql: string): TableSpecAny {\n\t\tlet table = <TableSpecAny>{ name: name, columns: {}, indices: [], triggers: {} };\n\t\tlet matches = sql.match(/\\((.*)\\)/);\n\t\t/* istanbul ignore else */\n\t\tif (matches) {\n\t\t\tlet pksplit: string[] = matches[1].split(/PRIMARY KEY/i);\n\t\t\tlet fields = pksplit[0].split(\",\");\n\t\t\tfor (let i = 0; i < fields.length; i++) {\n\t\t\t\tverify(!fields[i].match(/^\\s*(primary|foreign)\\s+key/i), \"unexpected column modifier (primary or foreign key) on %s\", fields[i]);\n\t\t\t\tlet quotedName = /\"(.+)\"\\s+(.*)/;\n\t\t\t\tlet unquotedName = /(\\w+)\\s+(.*)/;\n\t\t\t\tlet parts = fields[i].match(quotedName);\n\t\t\t\t/* istanbul ignore else */\n\t\t\t\tif (!parts) {\n\t\t\t\t\tparts = fields[i].match(unquotedName);\n\t\t\t\t}\n\t\t\t\tif (parts) {\n\t\t\t\t\ttable.columns[parts[1]] = Column.fromSql(parts[2]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/* istanbul ignore else */\n\t\t\tif (pksplit.length > 1) {\n\t\t\t\tlet pk = pksplit[1].match(/\\((.*)\\)/);\n\t\t\t\t/* istanbul ignore else */\n\t\t\t\tif (pk) {\n\t\t\t\t\tlet keys = pk[1].split(\",\");\n\t\t\t\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\t\t\t\tlet key = keys[i].trim();\n\t\t\t\t\t\ttable.columns[key].isKey = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn table;\n\t}\n\t\n\tfunction indexFromSql(sql: string): string[] {\n\t\tlet regex = /\\((.*)\\)/;\n\t\tlet matches = regex.exec(sql);\n\t\tverify(matches, \"bad format on index- couldn't determine column names from sql: %s\", sql);\n\t\treturn matches[1].split(\",\").map((x: string) => x.trim());\n\t}\n\t\n\tfunction createTable(transaction: DbTransaction, name: string, columns: ColumnSet, nextCallback: DbTransactionCallback): void {\n\t\tlet cols: string[] = [];\n\t\tlet pk: string[] = [];\n\t\tfor (let col in columns) {\n\t\t\tlet attrs: Column = columns[col];\n\t\t\tlet decl: string;\n\t\t\tswitch (attrs.type) {\n\t\t\t\tcase ColumnType.set:\n\t\t\t\t\t// ignore this column; values go into a separate table\n\t\t\t\t\tverify(!attrs.isKey, \"table %s cannot have a key on set column %s\", name, col);\n\t\t\t\t\tbreak;\n\t\n\t\t\t\tdefault:\n\t\t\t\t\tdecl = col + \" \" + Column.sql(attrs);\n\t\t\t\t\tcols.push(decl);\n\t\t\t\t\tif (attrs.isKey) {\n\t\t\t\t\t\tpk.push(col);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tverify(pk.length, \"table %s has no keys\", name);\n\t\tcols.push(\"PRIMARY KEY(\" + pk.join(\", \")  + \")\");\n\t\ttransaction.executeSql(\"CREATE TABLE \" + name + \" (\" + cols.join(\", \") + \")\", [], nextCallback);\n\t}\n\t\n\tfunction renameTable(transaction: DbTransaction, oldName: string, newName: string, nextCallback: DbTransactionCallback): void {\n\t\ttransaction.executeSql(\"ALTER TABLE \" + oldName + \" RENAME TO \" + newName, [], nextCallback);\n\t}\n\n\tfunction dropTable(transaction: DbTransaction, name: string, nextCallback: DbTransactionCallback): void {\n\t\ttransaction.executeSql(\"DROP TABLE IF EXISTS \" + name, [], nextCallback);\n\t}\n\t\n\tfunction createIndices(transaction: DbTransaction, schema: Schema, spec: TableSpecAny, force: boolean, nextCallback: DbTransactionCallback): void {\n\t\tlet indicesEqual = function(a: string[], b: string[]) {\n\t\t\tif (a.length != b.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (let i = 0; i < a.length; i++) {\n\t\t\t\tif (a[i] != b[i]) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n\t\tlet oldIndices = (spec.name in schema) ? schema[spec.name].indices : [];\n\t\tlet newIndices = spec.indices;\n\t\tlet getIndexName = function(indices: string[]): string {\n\t\t\t\treturn \"index_\" + spec.name + \"__\" + indices.join(\"_\");\n\t\t};\n\n\t\tlet stmts: DbStatement[] = [];\n\t\toldIndices.forEach((value: string[], i: number) => {\n\t\t\tlet drop = true;\n\t\n\t\t\tfor (let j = 0; j < newIndices.length; j++) {\n\t\t\t\tif (indicesEqual(oldIndices[i], newIndices[j])) {\n\t\t\t\t\tdrop = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif (drop) {\n\t\t\t\tstmts.push({ sql: \"DROP INDEX IF EXISTS \" + getIndexName(oldIndices[i]) });\n\t\t\t}\n\t\t});\n\n\t\tnewIndices.forEach((value: string[], j: number) => {\n\t\t\tlet create = true;\n\t\n\t\t\tfor (let i = 0; i < oldIndices.length; i++) {\n\t\t\t\tif (indicesEqual(oldIndices[i], newIndices[j])) {\n\t\t\t\t\tcreate = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif (create || force) {\n\t\t\t\tlet index = newIndices[j];\n\t\t\t\tstmts.push({ sql: \"CREATE INDEX IF NOT EXISTS \" + getIndexName(index) + \" ON \" + spec.name + \" (\" + index.join(\", \") + \")\" });\n\t\t\t}\n\t\t});\n\n\t\tDbExecuteSequence(transaction, stmts, nextCallback);\n\t}\n\t\n\tfunction copyData(transaction: DbTransaction, oldName: string, newName: string, oldColumns: ColumnSet, newColumns: ColumnSet, renamedColumns: RenamedColumnSet, nextCallback: DbTransactionCallback): void {\n\t\tlet oldTableColumns = Object.keys(oldColumns).filter(col => (col in newColumns) || (col in renamedColumns));\n\t\tlet newTableColumns = oldTableColumns.map(col => (col in renamedColumns) ? renamedColumns[col] : col);\n\t\t/* istanbul ignore else */\n\t\tif (oldTableColumns.length && newTableColumns.length) {\n\t\t\tlet stmt = \"INSERT INTO \" + newName + \" (\" + newTableColumns.join(\", \") + \") \";\n\t\t\tstmt += \"SELECT \" + oldTableColumns.join(\", \") + \" FROM \" + oldName + \";\";\n\t\t\ttransaction.executeSql(stmt, [], nextCallback);\n\t\t}\n\t\telse {\n\t\t\tnextCallback(transaction);\n\t\t}\n\t}\n\t\n\tfunction migrateChangeTable(transaction: DbTransaction, changeTableName: string, oldColumns: ColumnSet, newColumns: ColumnSet, renamedColumns: RenamedColumnSet, nextCallback: DbTransactionCallback): void {\n\t\tlet deletedColumns = Object.keys(oldColumns).filter(col => !(col in newColumns) && !(col in renamedColumns));\n\t\t/* istanbul ignore else */\n\t\tif (!isEmpty(renamedColumns) || deletedColumns) {\n\t\t\ttransaction.each(\n\t\t\t\t\"SELECT \" + ROWID + \", change\"\n\t\t\t\t+ \" FROM \" + changeTableName,\n\t\t\t\t[],\n\t\t\t\t(selectChangeTransaction: DbTransaction, row: any) => {\n\t\t\t\t\tlet change = fromText(row.change);\n\t\t\t\t\tlet changed = false;\n\t\t\t\t\tfor (let oldCol in renamedColumns) {\n\t\t\t\t\t\tlet newCol = renamedColumns[oldCol];\n\t\t\t\t\t\tif (oldCol in change) {\n\t\t\t\t\t\t\tchange[newCol] = change[oldCol];\n\t\t\t\t\t\t\tdelete change[oldCol];\n\t\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfor (let oldCol of deletedColumns) {\n\t\t\t\t\t\tif (oldCol in change) {\n\t\t\t\t\t\t\tdelete change[oldCol];\n\t\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (changed) {\n\t\t\t\t\t\tif (!isEmpty(change)) {\n\t\t\t\t\t\t\tselectChangeTransaction.executeSql(\n\t\t\t\t\t\t\t\t\"UPDATE \" + changeTableName\n\t\t\t\t\t\t\t\t+ \" SET change=?\"\n\t\t\t\t\t\t\t\t+ \" WHERE \" + ROWID + \"=?\",\n\t\t\t\t\t\t\t\t[toText(change), row[ROWID]],\n\t\t\t\t\t\t\t\t() => {}\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tselectChangeTransaction.executeSql(\n\t\t\t\t\t\t\t\t\"DELETE FROM \" + changeTableName\n\t\t\t\t\t\t\t\t+ \" WHERE \" + ROWID + \"=?\",\n\t\t\t\t\t\t\t\t[row[ROWID]],\n\t\t\t\t\t\t\t\t() => {}\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tnextCallback\n\t\t\t);\n\t\t}\n\t}\n\t\n\tfunction verifyGetValue(element: any, field: string | number): any {\n\t\tverify(field in element, \"element does not contain field %s: %s\", field, element);\n\t\treturn element[field];\n\t}\n\t\n\tfunction insert(transaction: DbTransaction, tableName: string, columns: string[], values: any[], nextCallback: DbTransactionCallback): void {\n\t\tlet questionMarks = values.map(v => \"?\");\n\t\tverify(columns.indexOf(ROWID) == -1, \"should not insert with rowid column\");\n\t\ttransaction.executeSql(\"INSERT OR REPLACE INTO \" + tableName + \" (\" + columns.join(\", \") + \") VALUES (\" + questionMarks.join(\", \") + \")\", values, nextCallback);\n\t}\n\t\n\tfunction insertElement<Element>(transaction: DbTransaction, table: Table<Element, any, any>, element: Element, nextCallback: DbTransactionCallback): void {\n\t\tlet keyValue = table.keyValue(element);\n\t\tlet columns = selectableColumns(table.spec, element);\n\t\tlet values: any[] = columns.map(col => serializeValue(table.spec, col, element[col]));\n\t\tlet time = verifyGetValue(element, internal_column_time);\n\t\t\n\t\tinsert(transaction, table.spec.name, columns, values, (tx2: DbTransaction) => {\n\t\t\t// insert set values\n\t\t\tlet stmts: DbStatement[] = [];\n\t\t\tObject.keys(table.spec.columns).forEach(function insertElementEachColumn(col: string) {\n\t\t\t\tlet column = table.spec.columns[col];\n\t\t\t\tif (column.type == ColumnType.set && (col in element)) {\n\t\t\t\t\tlet set: Set<any> = element[col];\n\t\t\t\t\tif (set.size) {\n\t\t\t\t\t\tset.forEach((value: any) => {\n\t\t\t\t\t\t\tstmts.push({\n\t\t\t\t\t\t\t\tsql: \"INSERT INTO \" + getSetTableName(table.spec.name, col)\n\t\t\t\t\t\t\t\t\t+ \" (time, key, value)\"\n\t\t\t\t\t\t\t\t\t+ \" VALUES (?, ?, ?)\",\n\t\t\t\t\t\t\t\tparams: [time, table.keyValue(element), column.element.serialize(value)]\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\tDbExecuteSequence(tx2, stmts, nextCallback);\n\t\t});\n\t}\n\t\n\tfunction resolve<Element>(transaction: DbTransaction, table: Table<Element, any, any>, keyValue: KeyType, nextCallback: DbTransactionCallback): void {\n\t\tselectBaseline(transaction, table, keyValue, (tx2: DbTransaction, baseline: BaselineInfo<Element>) => {\n\t\t\tgetChanges(tx2, table, baseline, (tx3: DbTransaction, changes: ChangeTableRow[]) => {\n\t\t\t\tlet mutation = applyChanges(baseline, changes, table.spec);\n\t\t\t\tlet promises: Promise<any>[] = [];\n\t\t\t\tif (!mutation.isChanged) {\n\t\t\t\t\t// mark it as latest (and others as not)\n\t\t\t\t\tsetLatest(tx3, table, keyValue, baseline.rowid, nextCallback);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// invalidate old latest rows\n\t\t\t\t\t// insert new latest row\n\t\t\t\t\tlet element = mutate(mutation.element, {\n\t\t\t\t\t\t[internal_column_latest]: {$set: true},\n\t\t\t\t\t\t[internal_column_time]: {$set: mutation.time},\n\t\t\t\t\t\t[internal_column_composed]: {$set: true}\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\tinvalidateLatest(tx3, table, keyValue, (tx4: DbTransaction) => {\n\t\t\t\t\t\tinsertElement(tx4, table, element, nextCallback);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\t\n\tfunction runQuery<Element, Query>(transaction: DbTransaction, table: Table<Element, any, Query>, query: Query, opts: FindOpts, clazz: new (props: Element) => Element, resultCallback: DbCallback<number | Element[]>): void {\n\t\topts = opts || {};\n\t\n\t\tconst numericConditions = {\n\t\t\t$gt: \">\",\n\t\t\t$gte: \">=\",\n\t\t\t$lt: \"<\",\n\t\t\t$lte: \"<=\"\n\t\t};\n\t\n\t\tconst inCondition = keyOf({ $in: false });\n\t\tconst hasCondition = keyOf({ $has: false });\n\t\tconst hasAnyCondition = keyOf({ $hasAny: false });\n\t\tconst hasAllConditions = keyOf({ $hasAll: false });\n\t\n\t\tlet conditions: string[] = [];\n\t\tlet values: (string | number)[] = [];\n\t\n\t\tObject.keys(query).forEach((col: string) => {\n\t\t\tverify((col in table.spec.columns) || (col in internalColumn), \"attempting to query based on column '%s' not in schema (%s)\", col, table.spec.columns);\n\t\t\tlet column: Column = (col in internalColumn) ? internalColumn[col] : table.spec.columns[col];\n\t\t\tlet spec = query[col];\n\t\t\tlet found = false;\n\t\n\t\t\tfor (let condition in numericConditions) {\n\t\t\t\tif (hasOwnProperty.call(spec, condition)) {\n\t\t\t\t\tconditions.push(\"(\" + col + numericConditions[condition] + \"?)\");\n\t\t\t\t\tlet value = spec[condition];\n\t\t\t\t\tverify(parseInt(value, 10) == value, \"condition %s must have a numeric argument: %s\", condition, value);\n\t\t\t\t\tvalues.push(value);\n\t\t\t\t\tfound = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif (!found) {\n\t\t\t\tif (hasOwnProperty.call(spec, inCondition)) {\n\t\t\t\t\tverify(Array.isArray(spec[inCondition]), \"must be an array: %s\", spec[inCondition]);\n\t\t\t\t\tconditions.push(col + \" IN (\" + spec[inCondition].map((x: any) => \"?\").join(\", \") + \")\");\n\t\t\t\t\tlet inValues: any[] = spec[inCondition];\n\t\t\t\t\tinValues = inValues.map(val => column.serialize(val));\n\t\t\t\t\tvalues.push(...inValues);\n\t\t\t\t\tfound = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (!found) {\n\t\t\t\tlet has = hasOwnProperty.call(spec, hasCondition);\n\t\t\t\tlet hasAny = hasOwnProperty.call(spec, hasAnyCondition);\n\t\t\t\tlet hasAll = hasOwnProperty.call(spec, hasAllConditions);\n\t\t\t\tif (has || hasAny || hasAll) {\n\t\t\t\t\tlet existsSetValues = function(setValues: any[], args: (string | number)[]): string {\n\t\t\t\t\t\tlet escapedValues = setValues.map(value => column.element.serialize(value));\n\t\t\t\t\t\targs.push(...escapedValues);\n\t\t\t\t\t\treturn \"EXISTS (\"\n\t\t\t\t\t\t\t+ \"SELECT 1 FROM \" + getSetTableName(table.spec.name, col)\n\t\t\t\t\t\t\t+ \" WHERE value IN (\" + setValues.map(x => \"?\").join(\", \") + \")\"\n\t\t\t\t\t\t\t+ \" AND key=\" + table.spec.name + \".\" + table.key\n\t\t\t\t\t\t\t+ \" AND time=\" + table.spec.name + \".\" + internal_column_time\n\t\t\t\t\t\t\t+ \")\";\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\t/* istanbul ignore else */\n\t\t\t\t\tif (has) {\n\t\t\t\t\t\tlet hasValue = spec[hasCondition];\n\t\t\t\t\t\tverify(!Array.isArray(hasValue), \"must not be an array: %s\", hasValue);\n\t\t\t\t\t\tlet condition = existsSetValues([hasValue], values);\n\t\t\t\t\t\tconditions.push(condition);\n\t\t\t\t\t}\n\t\t\t\t\telse if (hasAny) {\n\t\t\t\t\t\tlet hasAnyValues: any[] = spec[hasAnyCondition];\n\t\t\t\t\t\tverify(Array.isArray(hasAnyValues), \"must be an array: %s\", hasAnyValues);\n\t\t\t\t\t\tlet condition = existsSetValues(hasAnyValues, values);\n\t\t\t\t\t\tconditions.push(condition);\n\t\t\t\t\t}\n\t\t\t\t\telse if (hasAll) {\n\t\t\t\t\t\tlet hasAllValues: any[] = spec[hasAllConditions];\n\t\t\t\t\t\tverify(Array.isArray(hasAllValues), \"must be an array: %s\", hasAllValues);\n\t\t\t\t\t\tfor (let hasValue of hasAllValues) {\n\t\t\t\t\t\t\tlet condition = existsSetValues([hasValue], values);\n\t\t\t\t\t\t\tconditions.push(condition);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfound = true;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif (!found) {\n\t\t\t\t/* istanbul ignore else */\n\t\t\t\tif (column.type == ColumnType.bool) {\n\t\t\t\t\tconditions.push(col + (spec ? \"!=0\" : \"=0\"));\n\t\t\t\t\tfound = true;\n\t\t\t\t}\n\t\t\t\telse if (typeof spec === \"number\" || typeof spec === \"string\") {\n\t\t\t\t\tconditions.push(\"(\" + col + \"=?)\");\n\t\t\t\t\tvalues.push(spec);\n\t\t\t\t\tfound = true;\n\t\t\t\t}\n\t\t\t\telse if (spec instanceof RegExp) {\n\t\t\t\t\tlet rx: RegExp = spec;\n\t\t\t\t\tlet arg = rx.source.replace(/\\.\\*/g, \"%\").replace(/\\./g, \"_\");\n\t\t\t\t\tif (arg[0] == \"^\") {\n\t\t\t\t\t\targ = arg.substring(1);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\targ = \"%\" + arg;\n\t\t\t\t\t}\n\t\t\t\t\tif (arg[arg.length - 1] == \"$\") {\n\t\t\t\t\t\targ = arg.substring(0, arg.length - 1);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\targ = arg + \"%\";\n\t\t\t\t\t}\n\t\t\t\t\tverify(!arg.match(/(\\$|\\^|\\*|\\.|\\(|\\)|\\[|\\]|\\?)/), \"RegExp search only supports simple wildcards (.* and .): %s\", arg);\n\t\t\t\t\tconditions.push(\"(\" + col + \" LIKE ?)\");\n\t\t\t\t\tvalues.push(arg);\n\t\t\t\t\tfound = true;\n\t\t\t\t}\n\t\n\t\t\t\tverify(found, \"unknown query condition for %s: %s\", col, spec);\n\t\t\t}\n\t\t});\n\t\n\t\tlet fields: FieldSpec = assign({}, opts.fields || table.spec.columns, {[internal_column_time]: true});\n\t\tlet columns: string[] = selectableColumns(table.spec, fields);\n\t\tlet stmt = \"SELECT \" + (opts.count ? COUNT : columns.join(\", \"));\n\t\tstmt += \" FROM \" + table.spec.name;\n\t\tif (conditions.length) {\n\t\t\tstmt += \" WHERE \" + conditions.join(\" AND \");\n\t\t}\n\t\n\t\tif (opts.orderBy) {\n\t\t\tlet col = keyOf(opts.orderBy);\n\t\t\tlet order = opts.orderBy[col];\n\t\t\tstmt += \" ORDER BY \" + col + \" \" + (order == OrderBy.ASC ? \"ASC\" : \"DESC\");\n\t\t}\n\t\n\t\tif (opts.limit) {\n\t\t\tstmt += \" LIMIT \" + opts.limit;\n\t\t}\n\t\n\t\tif (opts.offset) {\n\t\t\tstmt += \" OFFSET \" + opts.offset;\n\t\t}\n\t\n\t\ttransaction.executeSql(stmt, values, (tx2: DbTransaction, rows: any[]) => {\n\t\t\tif (opts.count) {\n\t\t\t\tlet count = parseInt(rows[0][COUNT], 10);\n\t\t\t\tresultCallback(transaction, count);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tloadAllExternals(transaction, rows, table, opts.fields, (tx3: DbTransaction) => {\n\t\t\t\t\tlet results: Element[] = [];\n\t\t\t\t\tfor (let i = 0; i < rows.length; i++) {\n\t\t\t\t\t\tlet row = deserializeRow<Element>(table.spec, rows[i]);\n\t\t\t\t\t\tfor (let col in internalColumn) {\n\t\t\t\t\t\t\tif (!opts.fields || !(col in opts.fields)) {\n\t\t\t\t\t\t\t\tdelete row[col];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet obj = clazz ? new clazz(row) : row;\n\t\t\t\t\t\tresults.push(obj);\n\t\t\t\t\t}\n\t\t\t\t\tresultCallback(tx3, results);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\t\n\tfunction popValue<Element>(element: Element, field: string) {\n\t\tlet ret = verifyGetValue(element, field);\n\t\tdelete element[field];\n\t\treturn ret;\n\t}\n\t\n\tfunction selectBaseline<Element, Query>(transaction: DbTransaction, table: Table<Element, any, any>, keyValue: KeyType, resultCallback: DbCallback<BaselineInfo<Element>>): void {\n\t\tlet fieldSpec = <FieldSpec>{\n\t\t\t[ROWID]: true,\n\t\t\t[internal_column_time]: true,\n\t\t\t[internal_column_deleted]: true,\n\t\t};\n\t\tObject.keys(table.spec.columns).forEach(col => fieldSpec[col] = true);\n\t\n\t\tlet query = <Query>{\n\t\t\t[table.key]: keyValue,\n\t\t\t[internal_column_composed]: false\n\t\t};\n\t\n\t\tlet opts = <FindOpts>{\n\t\t\tfields: fieldSpec,\n\t\t\torderBy: { [internal_column_time]: OrderBy.DESC },\n\t\t\tlimit: 1\n\t\t};\n\t\n\t\trunQuery(transaction, table, query, opts, null, (tx2: DbTransaction, baselineResults: any[]) => {\n\t\t\tlet baseline: BaselineInfo<Element> = {\n\t\t\t\telement: <Element>{},\n\t\t\t\ttime: 0,\n\t\t\t\trowid: -1\n\t\t\t};\n\t\t\tif (baselineResults.length) {\n\t\t\t\tlet element = <Element>baselineResults[0];\n\t\t\t\tbaseline.element = element;\n\t\t\t\tbaseline.time = popValue(element, internal_column_time);\n\t\t\t\tbaseline.rowid = popValue(element, ROWID);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbaseline.element[table.key] = keyValue;\n\t\t\t}\n\t\t\tresultCallback(tx2, baseline);\n\t\t});\n\t}\n\t\n\tfunction loadAllExternals<Element>(transaction: DbTransaction, elements: Element[], table: Table<Element, any, any>, fields: FieldSpec, nextCallback: DbTransactionCallback) {\n\t\tlet i = 0;\n\t\tlet loadNextElement = (tx2: DbTransaction) => {\n\t\t\tif (i < elements.length) {\n\t\t\t\tlet element = elements[i];\n\t\t\t\ti++;\n\t\t\t\tloadExternals(tx2, table, element, fields, loadNextElement);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnextCallback(tx2);\n\t\t\t}\n\t\t};\n\t\t\n\t\tloadNextElement(transaction);\n\t};\n\t\n\tfunction loadExternals<Element>(transaction: DbTransaction, table: Table<Element, any, any>, element: any, fields: FieldSpec, nextCallback: DbTransactionCallback) {\n\t\tlet cols: string[] = Object.keys(table.spec.columns).filter(col => !fields || (col in fields && fields[col]));\n\t\tlet i = 0;\n\t\tlet loadNextField = (tx2: DbTransaction) => {\n\t\t\tif (i < cols.length) {\n\t\t\t\tlet col: string = cols[i];\n\t\t\t\ti++;\n\t\t\t\tlet column = table.spec.columns[col];\n\t\t\t\tif (column.type == ColumnType.set) {\n\t\t\t\t\tlet set: Set<any> = element[col] = element[col] || new Set<any>();\n\t\t\t\t\tlet keyValue = verifyGetValue(element, table.key);\n\t\t\t\t\tlet time = verifyGetValue(element, internal_column_time);\n\t\t\t\t\tlet p = tx2.executeSql(\n\t\t\t\t\t\t\"SELECT value \"\n\t\t\t\t\t\t+ \"FROM \" + getSetTableName(table.spec.name, col)\n\t\t\t\t\t\t+ \" WHERE key=?\"\n\t\t\t\t\t\t+ \" AND time=?\",\n\t\t\t\t\t\t[keyValue, time],\n\t\t\t\t\t\t(tx: DbTransaction, results: SetTableRow[]) => {\n\t\t\t\t\t\t\tfor (let row of results) {\n\t\t\t\t\t\t\t\tset.add(column.element.deserialize(row.value));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tloadNextField(tx2);\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tloadNextField(tx2);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnextCallback(tx2);\n\t\t\t}\n\t\t};\n\t\tloadNextField(transaction);\n\t}\n\t\n\tfunction getChanges<Element>(transaction: DbTransaction, table: Table<Element, any, any>, baseline: BaselineInfo<Element>, resultCallback: DbCallback<ChangeTableRow[]>): void {\n\t\tlet keyValue = verifyGetValue(baseline.element, table.key);\n\t\ttransaction.executeSql(\n\t\t\t\"SELECT key, time, change\"\n\t\t\t+ \" FROM \" + getChangeTableName(table.spec.name)\n\t\t\t+ \" WHERE key=? AND time>=?\"\n\t\t\t+ \" ORDER BY time ASC\",\n\t\t\t[keyValue, baseline.time],\n\t\t\tresultCallback);\n\t}\n\t\n\tinterface MutationResult<Element> {\n\t\telement: Element;\n\t\ttime: number;\n\t\tisChanged: boolean;\n\t}\n\t\n\tfunction applyChanges<Element, Mutator>(baseline: BaselineInfo<Element>, changes: ChangeTableRow[], spec: TableSpecAny): MutationResult<Element> {\n\t\tlet element: Element = baseline.element;\n\t\tlet time = baseline.time;\n\t\tfor (let i = 0; i < changes.length; i++) {\n\t\t\tlet row = changes[i];\n\t\t\tlet mutator = <Mutator>deserializeChange(row.change, spec);\n\t\t\telement = mutate(element, mutator);\n\t\t\ttime = Math.max(time, row.time);\n\t\t}\n\t\tlet isChanged = isMutated(baseline.element, element) || baseline.rowid == -1;\n\t\treturn { element, time, isChanged };\n\t}\n\t\n\tfunction setLatest<Element>(transaction: DbTransaction, table: Table<Element, any, any>, keyValue: KeyType, rowid: number, nextCallback: DbTransactionCallback): void {\n\t\ttransaction.executeSql(\n\t\t\t\"UPDATE \" + table.spec.name\n\t\t\t+ \" SET \" + internal_column_latest + \"=(\" + ROWID + \"=\" + rowid + \")\"\n\t\t\t+ \" WHERE \" + table.key + \"=?\",\n\t\t\t[keyValue],\n\t\t\tnextCallback);\n\t}\n\t\n\tfunction invalidateLatest<Element>(transaction: DbTransaction, table: Table<Element, any, any>, keyValue: KeyType, nextCallback: DbTransactionCallback): void {\n\t\ttransaction.executeSql(\n\t\t\t\"UPDATE \" + table.spec.name\n\t\t\t+ \" SET \" + internal_column_latest + \"=0\"\n\t\t\t+ \" WHERE \" + table.key + \"=?\",\n\t\t\t[keyValue],\n\t\t\tnextCallback);\n\t}\n\t\n\tfunction selectableColumns(spec: TableSpecAny, cols: { [key: string]: any }): string[] {\n\t\treturn Object.keys(cols).filter(col => (col == ROWID) || (col in internalColumn) || ((col in spec.columns) && (spec.columns[col].type != ColumnType.set)));\n\t}\n\t\n\tfunction serializeValue(spec: TableSpecAny, col: string, value: any): Serializable {\n\t\tif (col in spec.columns) {\n\t\t\tlet x = spec.columns[col].serialize(value);\n\t\t\treturn x;\n\t\t}\n\t\tverify(typeof value == \"number\" || value, \"bad value\");\n\t\treturn value;\n\t}\n\t\n\tfunction deserializeValue(spec: TableSpecAny, col: string, value: any) {\n\t\tif (col in spec.columns) {\n\t\t\tvalue = spec.columns[col].deserialize(value);\n\t\t}\n\t\treturn value;\n\t}\n\t\n\tlet setKey = keyOf({ $set: false });\n\tfunction serializeChange<Mutator>(change: Mutator, spec: TableSpec<any, Mutator, any>): string {\n\t\tfor (let col in change) {\n\t\t\tlet val = change[col];\n\t\t\tif (hasOwnProperty.call(val, setKey)) {\n\t\t\t\tchange[col] = shallowCopy(change[col]);\n\t\t\t\tchange[col][setKey] = serializeValue(spec, col, change[col][setKey]);\n\t\t\t}\n\t\t}\n\t\treturn toText(change);\n\t}\n\t\n\tfunction deserializeChange<Mutator>(text: string, spec: TableSpec<any, Mutator, any>): Mutator {\n\t\tlet change = fromText(text);\n\t\tfor (let col in change) {\n\t\t\tlet val = change[col];\n\t\t\tif (hasOwnProperty.call(val, setKey)) {\n\t\t\t\tchange[col][setKey] = deserializeValue(spec, col, change[col][setKey]);\n\t\t\t}\n\t\t}\n\t\treturn change;\n\t}\n\t\n\tfunction deserializeRow<T>(spec: TableSpecAny, row: any[]): T {\n\t\tlet ret: T = <any>{};\n\t\tfor (let col in row) {\n\t\t\tlet src = row[col];\n\t\t\tif (src != null) {\n\t\t\t\tret[col] = deserializeValue(spec, col, src);\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t}\n\t\n\tfunction isEmpty(obj: any): boolean {\n\t\tfor (let field in obj) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\t\n\texport function createStore(params: CreateStoreParams): Store {\n\t\treturn new Store(params);\n\t}\n}\n","///<reference path=\"./Store\"/>\n\"use strict\";\n\n/* istanbul ignore else */\nif (typeof module !== \"undefined\") {\n\tmodule.exports = Updraft;\n}\n","\"use strict\";\n\nnamespace Updraft.Query {\n\texport interface NumericConditions {\n\t\t$gt?: number;\n\t\t$gte?: number;\n\t\t$lt?: number;\n\t\t$lte?: number;\n\t}\n\t\n\texport interface SetHasCondition<T> {\n\t\t$has?: T;\n\t}\n\n\texport interface SetHasAnyCondition<T> {\n\t\t$hasAny?: T[];\n\t}\n\n\texport interface SetHasAllConditions<T> {\n\t\t$hasAll?: T[];\n\t}\n\t\n\texport interface DateConditions {\n\t\t$after?: Date;\n\t\t$before?: Date;\n\t}\n\t\n\texport interface InCondition<T> {\n\t\t$in: T[];\n\t}\n\t\n\texport type primitive<T> = T | InCondition<T>;\n\n\texport type none = void;\n\texport type bool = boolean;\n\texport type num = primitive<number> | NumericConditions;\n\texport type str = primitive<string> | RegExp;\n\texport type date = primitive<Date> | DateConditions;\n\texport type enm<T> = primitive<T>;\n\texport type set<T> = SetHasCondition<T> | SetHasAnyCondition<T> | SetHasAllConditions<T>;\n\texport type strSet = set<string>;\n}\n","///<reference path=\"../typings/tsd.d.ts\"/>\n///<reference path=\"./Database\"/>\n\"use strict\";\n\nnamespace Updraft {\n\t// compatible with sqlite3\n\texport interface IDatabase {\n\t\trun(sql: string, callback?: (err: Error) => void): IDatabase;\n\t\tall(sql: string, params?: any[], callback?: (err: Error, rows: any[]) => void): IDatabase;\n\t\teach(sql: string, params?: any[], callback?: (err: Error, row: any) => void, complete?: (err: Error, count: number) => void): IDatabase;\n\t\tserialize(callback?: () => void): void;\n\t\tparallelize(callback?: () => void): void;\n\t}\n\t\n\tinterface SQLiteTransaction extends DbTransaction {\n\t\terrorCallback: DbErrorCallback;\n\t}\n\t\n\t\n\tclass SQLiteWrapper implements DbWrapper {\n\t\tprivate db: IDatabase;\n\t\n\t\tconstructor(db: IDatabase) {\n\t\t\tthis.db = db;\n\t\t}\n\t\n\t\trun(sql: string): void {\n\t\t\tthis.db.run(sql, (err: Error) => {\n\t\t\t\t/* istanbul ignore if */\n\t\t\t\tif (err) {\n\t\t\t\t\tconsole.log(\"SQLiteWrapper.run(): error executing '\" + sql + \"': \", err);\n\t\t\t\t\tthrow err;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\n\t\texecuteSql(tx: SQLiteTransaction, sql: string, params: (string | number)[], callback: DbResultsCallback): void {\n\t\t\tthis.db.all(sql, params, (err: Error, rows: any[]) => {\n\t\t\t\t/* istanbul ignore if */\n\t\t\t\tif (err) {\n\t\t\t\t\tconsole.log(\"SQLiteWrapper.all(): error executing '\" + sql + \"': \", err);\n\t\t\t\t\tif (tx.errorCallback) {\n\t\t\t\t\t\ttx.errorCallback(err);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthrow err;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcallback(tx, rows);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t\t\n\t\teach(tx: SQLiteTransaction, sql: string, params: (string | number)[], callback: DbEachResultCallback, final: DbTransactionCallback): void {\n\t\t\tthis.db.each(sql, params, (err: Error, row: any) => {\n\t\t\t\t/* istanbul ignore if */\n\t\t\t\tif (err) {\n\t\t\t\t\tconsole.log(\"SQLiteWrapper.each(): error executing '\" + sql + \"': \", err);\n\t\t\t\t\tif (tx.errorCallback) {\n\t\t\t\t\t\ttx.errorCallback(err);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthrow err;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcallback(tx, row);\n\t\t\t\t}\n\t\t\t},\n\t\t\t(err: Error, count: number) => {\n\t\t\t\t/* istanbul ignore if */\n\t\t\t\tif (err) {\n\t\t\t\t\tconsole.log(\"SQLiteWrapper.each(): error executing '\" + sql + \"': \", err);\n\t\t\t\t\tif (tx.errorCallback) {\n\t\t\t\t\t\ttx.errorCallback(err);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthrow err;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tfinal(tx);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\n\t\ttransaction(callback: DbTransactionCallback, errorCallback: DbErrorCallback): void {\n\t\t\tlet result: any = undefined;\n\t\t\tthis.run(\"BEGIN TRANSACTION\");\n\t\t\tlet tx: SQLiteTransaction = {\n\t\t\t\terrorCallback: errorCallback,\n\t\t\t\texecuteSql: (sql: string, params: (string | number)[], resultsCb: DbResultsCallback): void => {\n\t\t\t\t\tthis.executeSql(tx, sql, params, resultsCb);\n\t\t\t\t},\n\t\t\t\teach: (sql: string, params: (string | number)[], resultsCb: DbEachResultCallback, final: DbTransactionCallback): void => {\n\t\t\t\t\tthis.each(tx, sql, params, resultsCb, final);\n\t\t\t\t}\n\t\t\t};\n\t\t\tcallback(tx);\n\t\t\tthis.run(\"COMMIT TRANSACTION\");\n\t\t\t\t// .catch(/* istanbul ignore next */ (err: Error) => {\n\t\t\t\t// \tconsole.log(\"encountered error, rolling back transaction: \", err);\n\t\t\t\t// \tthis.run(\"ROLLBACK TRANSACTION\");\n\t\t\t\t// \tthrow err;\n\t\t\t\t// })\n\t\t}\n\t\n\t\treadTransaction(callback: DbTransactionCallback, errorCallback: DbErrorCallback): void {\n\t\t\tthis.transaction(callback, errorCallback);\n\t\t}\n\t}\n\t\n\t\n\texport function createSQLiteWrapper(db: IDatabase): DbWrapper {\n\t\treturn new SQLiteWrapper(db);\n\t}\n}\n","///<reference path=\"./websql.d.ts\"/>\n///<reference path=\"./Database\"/>\n\"use strict\";\n\nnamespace Updraft {\n\n\tinterface WebsqlTransaction extends DbTransaction {\n\t\trealTransaction: SQLTransaction;\n\t\terrorCallback: DbErrorCallback;\n\t}\n\t\n\t\n\t/* istanbul ignore next: can't test websql in node */\n\tclass WebsqlWrapper implements DbWrapper {\n\t\tdb: Database;\n\t\ttraceCallback: (trace: string) => any;\n\t\n\t\tconstructor(name: string, version?: string, displayName?: string, estimatedSize?: number, traceCallback?: (trace: string) => any) {\n\t\t\tversion = version || \"1.0\";\n\t\t\tdisplayName = displayName || name;\n\t\t\testimatedSize = estimatedSize || 5 * 1024 * 1024;\n\t\n\t\t\tthis.db = window.openDatabase(name, version, displayName, estimatedSize);\n\t\t\tthis.traceCallback = traceCallback;\n\t\t}\n\t\t\n\t\ttrace(sql: string, params?: (string | number)[]) {\n\t\t\tif (this.traceCallback) {\n\t\t\t\tlet escapedString = this.stringify(sql, params);\n\t\t\t\tthis.traceCallback(escapedString);\n\t\t\t}\n\t\t}\n\t\t\n\t\tstringify(sql: string, params?: (string | number)[]): string {\n\t\t\tlet idx: number = 0;\n\t\t\tlet escapedString = sql.replace(/\\?/g, () => {\n\t\t\t\tlet x = params[idx++];\n\t\t\t\tif (typeof x == \"number\") {\n\t\t\t\t\treturn <string>x;\n\t\t\t\t} else {\n\t\t\t\t\treturn \"'\" + x + \"'\";\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn escapedString;\n\t\t}\n\t\t\n\t\tall(tx: WebsqlTransaction, sql: string, params: (string | number)[], callback: DbResultsCallback): void {\n\t\t\tthis.trace(sql, params);\n\t\t\ttry {\n\t\t\t\ttx.realTransaction.executeSql(sql, params,\n\t\t\t\t\t(transaction: SQLTransaction, resultSet: SQLResultSet) => {\n\t\t\t\t\t\tlet results: any[] = [];\n\t\t\t\t\t\tfor (let i = 0; i < resultSet.rows.length; i++) {\n\t\t\t\t\t\t\tlet row = resultSet.rows.item(i);\n\t\t\t\t\t\t\tresults.push(row);\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tcallback(this.wrapTransaction(transaction, tx.errorCallback), results);\n\t\t\t\t\t},\n\t\t\t\t\t(transaction: SQLTransaction, error: SQLError) => {\n\t\t\t\t\t\tconsole.error(\"error executing '\" + this.stringify(sql, params) + \"': \", error);\n\t\t\t\t\t\tif (tx.errorCallback) {\n\t\t\t\t\t\t\ttx.errorCallback(error);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthrow error;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t\tcatch (error) {\n\t\t\t\tconsole.error(\"error executing '\" + this.stringify(sql, params) + \"': \", error);\n\t\t\t\tif (tx.errorCallback) {\n\t\t\t\t\ttx.errorCallback(error);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\teach(tx: WebsqlTransaction, sql: string, params: (string | number)[], callback: DbEachResultCallback, final: DbTransactionCallback) {\n\t\t\tthis.trace(sql, params);\n\t\t\ttx.realTransaction.executeSql(sql, params,\n\t\t\t\t(transaction: SQLTransaction, resultSet: SQLResultSet) => {\n\t\t\t\t\tfor (let i = 0; i < resultSet.rows.length; i++) {\n\t\t\t\t\t\tlet row = resultSet.rows.item(i);\n\t\t\t\t\t\tif (callback) {\n\t\t\t\t\t\t\t(function(row: any) {\n\t\t\t\t\t\t\t\tcallback(tx, row);\n\t\t\t\t\t\t\t})(row);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tfinal(this.wrapTransaction(transaction, tx.errorCallback));\n\t\t\t\t},\n\t\t\t\t(transaction: SQLTransaction, error: SQLError) => {\n\t\t\t\t\tconsole.error(\"error executing '\" + this.stringify(sql, params) + \"': \", error);\n\t\t\t\t\tif (tx.errorCallback) {\n\t\t\t\t\t\ttx.errorCallback(error);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthrow error;\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t\n\t\tprivate wrapTransaction(transaction: SQLTransaction, errorCallback: DbErrorCallback): WebsqlTransaction {\n\t\t\tlet tx: WebsqlTransaction = {\n\t\t\t\trealTransaction: transaction,\n\t\t\t\terrorCallback: errorCallback,\n\t\t\t\texecuteSql: (sql: string, params?: (string | number)[], callback?: DbResultsCallback): void => {\n\t\t\t\t\tthis.all(tx, sql, params, callback);\n\t\t\t\t},\n\t\t\t\teach: (sql: string, params: (string | number)[], callback: DbEachResultCallback, final: DbTransactionCallback): void => {\n\t\t\t\t\tthis.each(tx, sql, params, callback, final);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn tx;\n\t\t}\n\t\n\t\ttransaction(callback: DbTransactionCallback, errorCallback: DbErrorCallback): void {\n\t\t\tthis.db.transaction((transaction: SQLTransaction) => {\n\t\t\t\tlet tx = this.wrapTransaction(transaction, errorCallback);\n\t\t\t\tcallback(tx);\n\t\t\t});\n\t\t}\n\t\n\t\treadTransaction(callback: DbTransactionCallback, errorCallback: DbErrorCallback): void {\n\t\t\tthis.db.readTransaction((transaction: SQLTransaction) => {\n\t\t\t\tlet tx = this.wrapTransaction(transaction, errorCallback);\n\t\t\t\tcallback(tx);\n\t\t\t});\n\t\t}\n\t}\n\t\n\t/* istanbul ignore next: can't test websql in node */\n\texport function createWebsqlWrapper(name: string, version?: string, displayName?: string, estimatedSize?: number, traceCallback?: (trace: string) => any): DbWrapper {\n\t\treturn new WebsqlWrapper(name, version, displayName, estimatedSize, traceCallback);\n\t}\n}\n"],"sourceRoot":"/source/"}